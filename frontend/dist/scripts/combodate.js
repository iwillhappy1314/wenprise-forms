/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scripts/modules/combodate.js":
/*!*********************************************!*\
  !*** ./assets/scripts/modules/combodate.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ \"jquery\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\n* Combodate - 1.1.0\n* Dropdown date and time picker.\n* Converts text input into dropdowns to pick day, month, year, hour, minute and second.\n* Uses momentjs as datetime library http://momentjs.com.\n* For i18n include corresponding file from https://github.com/timrwood/moment/tree/master/lang\n*\n* Confusion at noon and midnight - see http://en.wikipedia.org/wiki/12-hour_clock#Confusion_at_noon_and_midnight\n* In combodate:\n* 12:00 pm --> 12:00 (24-h format, midday)\n* 12:00 am --> 00:00 (24-h format, midnight, start of day)\n*\n* Differs from momentjs parse rules:\n* 00:00 pm, 12:00 pm --> 12:00 (24-h format, day not change)\n* 00:00 am, 12:00 am --> 00:00 (24-h format, day not change)\n*\n*\n* Author: Vitaliy Potapov\n* Project page: http://github.com/vitalets/combodate\n* Copyright (c) 2012 Vitaliy Potapov. Released under MIT License.\n**/\n(function ($) {\n  var Combodate = function Combodate(element, options) {\n    this.$element = $(element);\n    if (!this.$element.is('input')) {\n      $.error('Combodate should be applied to INPUT element');\n      return;\n    }\n    this.options = $.extend({}, $.fn.combodate.defaults, options, this.$element.data());\n    this.init();\n  };\n  Combodate.prototype = {\n    constructor: Combodate,\n    init: function init() {\n      this.map = {\n        //key   regexp    moment.method\n        day: ['D', 'date'],\n        month: ['M', 'month'],\n        year: ['Y', 'year'],\n        hour: ['[Hh]', 'hours'],\n        minute: ['m', 'minutes'],\n        second: ['s', 'seconds'],\n        ampm: ['[Aa]', '']\n      };\n      this.$widget = $('<span class=\"combodate\"></span>').html(this.getTemplate());\n      this.initCombos();\n\n      // internal momentjs instance\n      this.datetime = null;\n\n      //update original input on change\n      this.$widget.on('change', 'select', $.proxy(function (e) {\n        this.$element.val(this.getValue()).change();\n        // update days count if month or year changes\n        if (this.options.smartDays) {\n          if ($(e.target).is('.month') || $(e.target).is('.year')) {\n            this.fillCombo('day');\n          }\n        }\n      }, this));\n      this.$widget.find('select').css('width', 'auto');\n\n      // hide original input and insert widget\n      this.$element.hide().after(this.$widget);\n\n      // set initial value\n      this.setValue(this.$element.val() || this.options.value);\n    },\n    /*\n     Replace tokens in template with <select> elements\n    */\n    getTemplate: function getTemplate() {\n      var tpl = this.options.template;\n      var inputDisabled = this.$element.prop('disabled');\n      var customClass = this.options.customClass;\n\n      //first pass\n      $.each(this.map, function (k, v) {\n        v = v[0];\n        var r = new RegExp(v + '+'),\n          token = v.length > 1 ? v.substring(1, 2) : v;\n        tpl = tpl.replace(r, '{' + token + '}');\n      });\n\n      //replace spaces with &nbsp;\n      tpl = tpl.replace(/ /g, '&nbsp;');\n\n      //second pass\n      $.each(this.map, function (k, v) {\n        v = v[0];\n        var token = v.length > 1 ? v.substring(1, 2) : v;\n        tpl = tpl.replace('{' + token + '}', '<select class=\"' + k + ' ' + customClass + '\"' + (inputDisabled ? ' disabled=\"disabled\"' : '') + '></select>');\n      });\n      return tpl;\n    },\n    /*\n     Initialize combos that presents in template\n    */\n    initCombos: function initCombos() {\n      for (var k in this.map) {\n        var $c = this.$widget.find('.' + k);\n        // set properties like this.$day, this.$month etc.\n        this['$' + k] = $c.length ? $c : null;\n        // fill with items\n        this.fillCombo(k);\n      }\n    },\n    /*\n     Fill combo with items\n    */\n    fillCombo: function fillCombo(k) {\n      var $combo = this['$' + k];\n      if (!$combo) {\n        return;\n      }\n\n      // define method name to fill items, e.g `fillDays`\n      var f = 'fill' + k.charAt(0).toUpperCase() + k.slice(1);\n      var items = this[f]();\n      var value = $combo.val();\n      $combo.empty();\n      for (var i = 0; i < items.length; i++) {\n        $combo.append('<option value=\"' + items[i][0] + '\">' + items[i][1] + '</option>');\n      }\n      $combo.val(value);\n    },\n    /*\n     Initialize items of combos. Handles `firstItem` option\n    */\n    fillCommon: function fillCommon(key) {\n      var values = [],\n        relTime;\n      if (this.options.firstItem === 'name') {\n        //need both to support moment ver < 2 and  >= 2\n        if (moment.localeData) {\n          relTime = moment.localeData()._relativeTime;\n        } else {\n          relTime = moment.relativeTime || moment.langData()._relativeTime;\n        }\n        var header = typeof relTime[key] === 'function' ? relTime[key](1, true, key, false) : relTime[key];\n        //take last entry (see momentjs lang files structure)\n        header = header.split(' ').reverse()[0];\n        values.push(['', header]);\n      } else if (this.options.firstItem === 'empty') {\n        values.push(['', '']);\n      }\n      return values;\n    },\n    /*\n    fill day\n    */\n    fillDay: function fillDay() {\n      var items = this.fillCommon('d'),\n        name,\n        i,\n        twoDigit = this.options.template.indexOf('DD') !== -1,\n        daysCount = 31;\n\n      // detect days count (depends on month and year)\n      // originally https://github.com/vitalets/combodate/pull/7\n      if (this.options.smartDays && this.$month && this.$year) {\n        var month = parseInt(this.$month.val(), 10);\n        var year = parseInt(this.$year.val(), 10);\n        if (!isNaN(month) && !isNaN(year)) {\n          daysCount = moment([year, month]).daysInMonth();\n        }\n      }\n      for (i = 1; i <= daysCount; i++) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    /*\n    fill month\n    */\n    fillMonth: function fillMonth() {\n      var items = this.fillCommon('M'),\n        name,\n        i,\n        longNamesNum = this.options.template.indexOf('MMMMMM') !== -1,\n        shortNamesNum = this.options.template.indexOf('MMMMM') !== -1,\n        longNames = this.options.template.indexOf('MMMM') !== -1,\n        shortNames = this.options.template.indexOf('MMM') !== -1,\n        twoDigit = this.options.template.indexOf('MM') !== -1;\n      for (i = 0; i <= 11; i++) {\n        if (longNamesNum) {\n          name = moment().date(1).month(i).format('MM - MMMM');\n        } else if (shortNamesNum) {\n          name = moment().date(1).month(i).format('MM - MMM');\n        } else if (longNames) {\n          //see https://github.com/timrwood/momentjs.com/pull/36\n          name = moment().date(1).month(i).format('MMMM');\n        } else if (shortNames) {\n          name = moment().date(1).month(i).format('MMM');\n        } else if (twoDigit) {\n          name = this.leadZero(i + 1);\n        } else {\n          name = i + 1;\n        }\n        items.push([i, name]);\n      }\n      return items;\n    },\n    /*\n    fill year\n    */\n    fillYear: function fillYear() {\n      var items = [],\n        name,\n        i,\n        longNames = this.options.template.indexOf('YYYY') !== -1;\n      for (i = this.options.maxYear; i >= this.options.minYear; i--) {\n        name = longNames ? i : (i + '').substring(2);\n        items[this.options.yearDescending ? 'push' : 'unshift']([i, name]);\n      }\n      items = this.fillCommon('y').concat(items);\n      return items;\n    },\n    /*\n    fill hour\n    */\n    fillHour: function fillHour() {\n      var items = this.fillCommon('h'),\n        name,\n        i,\n        h12 = this.options.template.indexOf('h') !== -1,\n        h24 = this.options.template.indexOf('H') !== -1,\n        twoDigit = this.options.template.toLowerCase().indexOf('hh') !== -1,\n        min = h12 ? 1 : 0,\n        max = h12 ? 12 : 23;\n      for (i = min; i <= max; i++) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    /*\n    fill minute\n    */\n    fillMinute: function fillMinute() {\n      var items = this.fillCommon('m'),\n        name,\n        i,\n        twoDigit = this.options.template.indexOf('mm') !== -1;\n      for (i = 0; i <= 59; i += this.options.minuteStep) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    /*\n    fill second\n    */\n    fillSecond: function fillSecond() {\n      var items = this.fillCommon('s'),\n        name,\n        i,\n        twoDigit = this.options.template.indexOf('ss') !== -1;\n      for (i = 0; i <= 59; i += this.options.secondStep) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    /*\n    fill ampm\n    */\n    fillAmpm: function fillAmpm() {\n      var ampmL = this.options.template.indexOf('a') !== -1,\n        ampmU = this.options.template.indexOf('A') !== -1,\n        items = [['am', ampmL ? 'am' : 'AM'], ['pm', ampmL ? 'pm' : 'PM']];\n      return items;\n    },\n    /*\n     Returns current date value from combos.\n     If format not specified - `options.format` used.\n     If format = `null` - Moment object returned.\n    */\n    getValue: function getValue(format) {\n      var dt,\n        values = {},\n        that = this,\n        notSelected = false;\n\n      //getting selected values\n      $.each(this.map, function (k, v) {\n        if (k === 'ampm') {\n          return;\n        }\n\n        // if combo exists, use it's value, otherwise use default\n        if (that['$' + k]) {\n          values[k] = parseInt(that['$' + k].val(), 10);\n        } else {\n          var defaultValue;\n          if (that.datetime) {\n            defaultValue = that.datetime[v[1]]();\n          } else {\n            defaultValue = k === 'day' ? 1 : 0;\n          }\n          values[k] = defaultValue;\n        }\n        if (isNaN(values[k])) {\n          notSelected = true;\n          return false;\n        }\n      });\n\n      //if at least one visible combo not selected - return empty string\n      if (notSelected) {\n        return '';\n      }\n\n      //convert hours 12h --> 24h\n      if (this.$ampm) {\n        //12:00 pm --> 12:00 (24-h format, midday), 12:00 am --> 00:00 (24-h format, midnight, start of day)\n        if (values.hour === 12) {\n          values.hour = this.$ampm.val() === 'am' ? 0 : 12;\n        } else {\n          values.hour = this.$ampm.val() === 'am' ? values.hour : values.hour + 12;\n        }\n      }\n      dt = moment([values.year, values.month, values.day, values.hour, values.minute, values.second]);\n\n      //highlight invalid date\n      this.highlight(dt);\n      format = format === undefined ? this.options.format : format;\n      if (format === null) {\n        return dt.isValid() ? dt : null;\n      } else {\n        return dt.isValid() ? dt.format(format) : '';\n      }\n    },\n    setValue: function setValue(value) {\n      if (!value) {\n        return;\n      }\n\n      // parse in strict mode (third param `true`)\n      var dt = typeof value === 'string' ? moment(value, this.options.format, true) : moment(value),\n        that = this,\n        values = {};\n\n      //function to find nearest value in select options\n      function getNearest($select, value) {\n        var delta = {};\n        $select.children('option').each(function (i, opt) {\n          var optValue = $(opt).attr('value'),\n            distance;\n          if (optValue === '') return;\n          distance = Math.abs(optValue - value);\n          if (typeof delta.distance === 'undefined' || distance < delta.distance) {\n            delta = {\n              value: optValue,\n              distance: distance\n            };\n          }\n        });\n        return delta.value;\n      }\n      if (dt.isValid()) {\n        //read values from date object\n        $.each(this.map, function (k, v) {\n          if (k === 'ampm') {\n            return;\n          }\n          values[k] = dt[v[1]]();\n        });\n        if (this.$ampm) {\n          //12:00 pm --> 12:00 (24-h format, midday), 12:00 am --> 00:00 (24-h format, midnight, start of day)\n          if (values.hour >= 12) {\n            values.ampm = 'pm';\n            if (values.hour > 12) {\n              values.hour -= 12;\n            }\n          } else {\n            values.ampm = 'am';\n            if (values.hour === 0) {\n              values.hour = 12;\n            }\n          }\n        }\n        $.each(values, function (k, v) {\n          //call val() for each existing combo, e.g. this.$hour.val()\n          if (that['$' + k]) {\n            if (k === 'minute' && that.options.minuteStep > 1 && that.options.roundTime) {\n              v = getNearest(that['$' + k], v);\n            }\n            if (k === 'second' && that.options.secondStep > 1 && that.options.roundTime) {\n              v = getNearest(that['$' + k], v);\n            }\n            that['$' + k].val(v);\n          }\n        });\n\n        // update days count\n        if (this.options.smartDays) {\n          this.fillCombo('day');\n        }\n        this.$element.val(dt.format(this.options.format)).change();\n        this.datetime = dt;\n      } else {\n        this.datetime = null;\n      }\n    },\n    /*\n     highlight combos if date is invalid\n    */\n    highlight: function highlight(dt) {\n      if (!dt.isValid()) {\n        if (this.options.errorClass) {\n          this.$widget.addClass(this.options.errorClass);\n        } else {\n          //store original border color\n          if (!this.borderColor) {\n            this.borderColor = this.$widget.find('select').css('border-color');\n          }\n          this.$widget.find('select').css('border-color', 'red');\n        }\n      } else {\n        if (this.options.errorClass) {\n          this.$widget.removeClass(this.options.errorClass);\n        } else {\n          this.$widget.find('select').css('border-color', this.borderColor);\n        }\n      }\n    },\n    leadZero: function leadZero(v) {\n      return v <= 9 ? '0' + v : v;\n    },\n    destroy: function destroy() {\n      this.$widget.remove();\n      this.$element.removeData('combodate').show();\n    }\n\n    //todo: clear method\n  };\n\n  $.fn.combodate = function (option) {\n    var d,\n      args = Array.apply(null, arguments);\n    args.shift();\n\n    //getValue returns date as string / object (not jQuery object)\n    if (option === 'getValue' && this.length && (d = this.eq(0).data('combodate'))) {\n      return d.getValue.apply(d, args);\n    }\n    return this.each(function () {\n      var $this = $(this),\n        data = $this.data('combodate'),\n        options = _typeof(option) == 'object' && option;\n      if (!data) {\n        $this.data('combodate', data = new Combodate(this, options));\n      }\n      if (typeof option == 'string' && typeof data[option] == 'function') {\n        data[option].apply(data, args);\n      }\n    });\n  };\n  $.fn.combodate.defaults = {\n    //in this format value stored in original input\n    format: 'DD-MM-YYYY HH:mm',\n    //in this format items in dropdowns are displayed\n    template: 'D / MMM / YYYY   H : mm',\n    //initial value, can be `new Date()`\n    value: null,\n    minYear: 1970,\n    maxYear: 2015,\n    yearDescending: true,\n    minuteStep: 5,\n    secondStep: 1,\n    firstItem: 'empty',\n    //'name', 'empty', 'none'\n    errorClass: null,\n    customClass: '',\n    roundTime: true,\n    // whether to round minutes and seconds if step > 1\n    smartDays: false // whether days in combo depend on selected month: 31, 30, 28\n  };\n})(__webpack_provided_window_dot_jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/scripts/modules/combodate.js\n");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ (function(module) {

"use strict";
module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/scripts/modules/combodate.js");
/******/ 	
/******/ })()
;