/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scripts/modules/ajax-uploader.js":
/*!*************************************************!*\
  !*** ./assets/scripts/modules/ajax-uploader.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var dm_file_uploader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dm-file-uploader */ \"./node_modules/.pnpm/dm-file-uploader@1.0.2/node_modules/dm-file-uploader/src/js/jquery.dm-uploader.js\");\n/* harmony import */ var dm_file_uploader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dm_file_uploader__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ \"jquery\");\n\n(function ($) {\n  var close_icon = '<svg class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\"><path d=\"M49.6 158.4l104-108.8 358.4 352 356.8-352 105.6 105.6-352 356.8 352 355.2-102.4 107.2L512 620.8 155.2 974.4l-105.6-105.6L406.4 512z\" p-id=\"3640\" fill=\"#ffffff\"></path></svg>',\n    file_icon = '<svg class=\"icon\" style=\"\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\"><defs><style type=\"text/css\"></style></defs><path d=\"M768 426.666667H341.333333a17.066667 17.066667 0 1 0 0 34.133333h426.666667a17.066667 17.066667 0 1 0 0-34.133333zM341.333333 324.266667h170.666667a17.066667 17.066667 0 1 0 0-34.133334H341.333333a17.066667 17.066667 0 1 0 0 34.133334zM768 563.2H341.333333a17.066667 17.066667 0 1 0 0 34.133333h426.666667a17.066667 17.066667 0 1 0 0-34.133333zM768 699.733333H341.333333a17.066667 17.066667 0 1 0 0 34.133334h426.666667a17.066667 17.066667 0 1 0 0-34.133334zM768 836.266667H341.333333a17.066667 17.066667 0 1 0 0 34.133333h426.666667a17.066667 17.066667 0 1 0 0-34.133333z\" p-id=\"2458\" fill=\"#666666\"></path><path d=\"M836.266667 248.9344V0H102.4v938.666667h85.333333v85.333333h733.866667V334.267733l-85.333333-85.333333z m-153.6-105.335467l153.6 153.6L863.3344 324.266667H682.666667V143.598933zM136.533333 904.533333V34.133333h665.6v180.667734L672.6656 85.333333H187.733333v819.2H136.533333z m85.333334 85.333334V119.466667h426.666666v238.933333h238.933334v631.466667H221.866667z\" p-id=\"2459\" fill=\"#666666\"></path></svg>';\n  $.fn.wprsAjaxUploader = function () {\n    var options = this.data('settings'),\n      el = this,\n      defaults = {\n        url: el.find('.rs-uploader__shadow').data('url'),\n        type: 'POST',\n        dataType: 'json',\n        maxFileSize: 2000000,\n        auto: true,\n        queue: false,\n        multiple: el.data('multiple') === true,\n        onBeforeUpload: function onBeforeUpload() {\n          el.find('.js-uploader-message').empty();\n        },\n        onDragEnter: function onDragEnter() {\n          el.addClass('active');\n        },\n        onDragLeave: function onDragLeave() {\n          el.removeClass('active');\n        },\n        onUploadSuccess: function onUploadSuccess(id, data) {\n          var name = el.data('name'),\n            is_multiple = el.data('multiple') === true,\n            // @formatter:off\n            button = '<button type=\"button\" class=\"rs-uploader__close\" data-value=' + data.id + '>' + close_icon + '</button>',\n            thumb = '<img src=\"' + data.thumb + '\" alt=\"Thumbnail\">';\n          if (!data.thumb) {\n            thumb = file_icon + data.title;\n          }\n          el.find('input:text').filter(function () {\n            return this.value === '';\n          }).remove();\n          if (!is_multiple) {\n            el.find('.rs-uploader__text').hide();\n            el.find('.rs-uploader__button').hide();\n            el.find('.rs-uploader__value').empty().append('<input type=\"hidden\" name=\"' + name + '\" value=\"' + data.id + '\">');\n            el.find('.rs-uploader__preview').empty().show().append('<div class=\"rs-uploader__thumbnail\">' + button + thumb + '</div>');\n          } else {\n            el.find('.rs-uploader__value').append('<input type=\"hidden\" name=\"' + name + '\" value=\"' + data.id + '\">');\n            el.find('.rs-uploader__preview').show().append('<div class=\"rs-uploader__thumbnail\">' + button + thumb + '</div>');\n          }\n        },\n        onUploadError: function onUploadError(id, xhr, status, errorThrown) {\n          el.find('.js-uploader-message').html(wprsUploaderL10n.error);\n        },\n        onUploadComplete: function onUploadComplete(id) {\n          el.find('.js-progress').remove();\n        },\n        onUploadCanceled: function onUploadCanceled(id) {\n          el.find('.js-uploader-message').html(wprsUploaderL10n.canceled);\n        },\n        onUploadProgress: function onUploadProgress(id, percent) {\n          el.find('.js-uploader-message').html($('<div class=\"js-progress\">').css('width', percent + '%'));\n        },\n        onFileTypeError: function onFileTypeError(file) {\n          el.find('.js-uploader-message').html(wprsUploaderL10n.file_type_error);\n        },\n        onFileSizeError: function onFileSizeError(file) {\n          el.find('.js-uploader-message').html(wprsUploaderL10n.file_size_error);\n        },\n        onFileExtError: function onFileExtError(file) {\n          el.find('.js-uploader-message').html(wprsUploaderL10n.file_ext_error);\n        }\n      };\n    var settings = $.extend({}, defaults, options);\n\n    /**\n     * 初始化文件上传组件\n     */\n    el.dmUploader(settings);\n\n    /**\n     * 删除缩略图\n     */\n    $('body').on('click', '.rs-uploader__close', function () {\n      var value = $(this).data('value'),\n        uploader = $(this).closest('.js-uploader'),\n        is_multiple = uploader.data('multiple') === true;\n\n      // 移除值\n      if (!is_multiple) {\n        uploader.find('.rs-uploader__value input').attr('value', '');\n        uploader.show();\n        uploader.find('.rs-uploader__text').show();\n        uploader.find('.rs-uploader__button').show();\n      } else {\n        uploader.find('input[value=' + value + ']').remove();\n      }\n\n      // 移除缩略图\n      $(this).parent().remove();\n    });\n\n    /**\n     * 单文件上传时，如果已有文件，移除上传组件\n     */\n    $('input[name=js-input-shadow]').each(function () {\n      var uploader = $(this).closest('.js-uploader'),\n        is_multiple = uploader.data('multiple') === true,\n        thumbnails = uploader.find('.rs-uploader__preview').children().length;\n      if (!is_multiple && thumbnails > 0) {\n        uploader.find('.rs-uploader__text').hide();\n        $(this).parent().hide();\n      }\n    });\n  };\n\n  /**\n   * WordPress Uploader\n   */\n  $('.rs-wp-uploader__button').on('click', function (e) {\n    e.preventDefault();\n    var wprs_wp_media_uploader,\n      wprs_wp_media_target_input = $(this).next().attr('id'),\n      uploader = $(this).closest('.rs-wp-uploader'),\n      name = uploader.data('name'),\n      is_multiple = uploader.data('multiple') === true;\n    if (wprs_wp_media_uploader) {\n      wprs_wp_media_uploader.open();\n      return;\n    }\n    wprs_wp_media_uploader = wp.media.frames.file_frame = wp.media({\n      title: wprsUploaderL10n.choose_image,\n      button: {\n        text: wprsUploaderL10n.insert_image\n      },\n      multiple: is_multiple\n    });\n    wprs_wp_media_uploader.on('select', function () {\n      var target_input = $('#' + wprs_wp_media_target_input).parent(),\n        attachments = wprs_wp_media_uploader.state().get('selection').toJSON();\n      attachments.forEach(function (attachment) {\n        var button = '<button type=\"button\" class=\"rs-uploader__close rs-wp-uploader__close\" data-value=' + attachment.id + '>' + close_icon + '</button>',\n          thumb = '<div class=\"rs-uploader__thumbnail\">' + button + '<img src=\"' + attachment.url + '\" alt=\"Thumbnail\"></div>',\n          el_preview = target_input.find('.rs-uploader__preview'),\n          el_value = target_input.find('.rs-uploader__value');\n        target_input.find('input:text').remove();\n        if (is_multiple) {\n          el_value.append('<input type=\"hidden\" name=\"' + name + '\" value=\"' + attachment.id + '\">');\n          el_preview.append(thumb).show();\n        } else {\n          el_value.html('<input type=\"hidden\" name=\"' + name + '\" value=\"' + attachment.id + '\">');\n          el_preview.html(thumb).show();\n        }\n      });\n    });\n\n    /**\n     * 删除缩略图\n     */\n    $('.rs-form--wp-uploader').on('click', 'button.rs-wp-uploader__close', function (el) {\n      var value = $(this).data('value'),\n        wp_uploader = $('body').find('.rs-wp-uploader__field');\n      console.log(wp_uploader.find('input[value=' + value + ']'));\n\n      // 移除值\n      wp_uploader.find('input[value=' + value + ']').remove();\n\n      // 移除缩略图\n      $(this).parent().remove();\n    });\n    wprs_wp_media_uploader.open();\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/scripts/modules/ajax-uploader.js\n");

/***/ }),

/***/ "./node_modules/.pnpm/dm-file-uploader@1.0.2/node_modules/dm-file-uploader/src/js/jquery.dm-uploader.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/dm-file-uploader@1.0.2/node_modules/dm-file-uploader/src/js/jquery.dm-uploader.js ***!
  \**************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * dmUploader - jQuery Ajax File Uploader Widget\n * https://github.com/danielm/uploader\n *\n * Copyright Daniel Morales <daniel85mg@gmail.com>\n * Released under the MIT license.\n * https://github.com/danielm/uploader/blob/master/LICENSE.txt\n *\n * @preserve\n */\n\n/* global define, define, window, document, FormData */\n\n(function(factory) {\n  \"use strict\";\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"jquery\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(function($) {\n  \"use strict\";\n\n  var pluginName = \"dmUploader\";\n\n  var FileStatus = {\n    PENDING: 0,\n    UPLOADING: 1,\n    COMPLETED: 2,\n    FAILED: 3,\n    CANCELLED: 4 //(by the user)\n  };\n\n  // These are the plugin defaults values\n  var defaults = {\n    auto: true,\n    queue: true,\n    dnd: true,\n    hookDocument: true,\n    multiple: true,\n    url: document.URL,\n    method: \"POST\",\n    extraData: {},\n    headers: {},\n    dataType: null,\n    fieldName: \"file\",\n    maxFileSize: 0,\n    allowedTypes: \"*\",\n    extFilter: null,\n    onInit: function(){},\n    onComplete: function(){},\n    onFallbackMode: function() {},\n    onNewFile: function(){},        //params: id, file\n    onBeforeUpload: function(){},   //params: id\n    onUploadProgress: function(){}, //params: id, percent\n    onUploadSuccess: function(){},  //params: id, data\n    onUploadCanceled: function(){}, //params: id\n    onUploadError: function(){},    //params: id, xhr, status, message\n    onUploadComplete: function(){}, //params: id\n    onFileTypeError: function(){},  //params: file\n    onFileSizeError: function(){},  //params: file\n    onFileExtError: function(){},   //params: file\n    onDragEnter: function(){},\n    onDragLeave: function(){},\n    onDocumentDragEnter: function(){},\n    onDocumentDragLeave: function(){}\n  };\n  \n  var DmUploaderFile = function(file, widget)\n  {\n    this.data = file;\n\n    this.widget = widget;\n\n    this.jqXHR = null;\n\n    this.status = FileStatus.PENDING;\n\n    // The file id doesnt have to bo that special.... or not?\n    this.id = Math.random().toString(36).substr(2);\n  };\n\n  DmUploaderFile.prototype.upload = function()\n  {\n    var file = this;\n\n    if (!file.canUpload()) {\n\n      if (file.widget.queueRunning && file.status !== FileStatus.UPLOADING) {\n        file.widget.processQueue();\n      }\n\n      return false;\n    }\n\n    // Form Data\n    var fd = new FormData();\n    fd.append(file.widget.settings.fieldName, file.data);\n\n    // Append extra Form Data\n    var customData = file.widget.settings.extraData;\n    if (typeof(customData) === \"function\") {\n      customData = customData.call(file.widget.element, file.id);\n    }\n\n    $.each(customData, function(exKey, exVal) {\n      fd.append(exKey, exVal);\n    });\n\n    file.status = FileStatus.UPLOADING;\n    file.widget.activeFiles++;\n\n    file.widget.settings.onBeforeUpload.call(file.widget.element, file.id);\n\n    // Ajax Submit\n    file.jqXHR = $.ajax({\n      url: file.widget.settings.url,\n      type: file.widget.settings.method,\n      dataType: file.widget.settings.dataType,\n      data: fd,\n      headers: file.widget.settings.headers,\n      cache: false,\n      contentType: false,\n      processData: false,\n      forceSync: false,\n      xhr: function() { return file.getXhr(); },\n      success: function(data) { file.onSuccess(data); },\n      error: function(xhr, status, errMsg) { file.onError(xhr, status, errMsg); },\n      complete: function() { file.onComplete(); },\n    });\n\n    return true;\n  };\n\n  DmUploaderFile.prototype.onSuccess = function(data)\n  {\n    this.status = FileStatus.COMPLETED;\n    this.widget.settings.onUploadSuccess.call(this.widget.element, this.id, data);\n  };\n\n  DmUploaderFile.prototype.onError = function(xhr, status, errMsg)\n  {\n    // If the status is: cancelled (by the user) don't invoke the error callback\n    if (this.status !== FileStatus.CANCELLED) {\n      this.status = FileStatus.FAILED;\n      this.widget.settings.onUploadError.call(this.widget.element, this.id, xhr, status, errMsg);\n    }\n  };\n\n  DmUploaderFile.prototype.onComplete = function()\n  {\n    this.widget.activeFiles--;\n\n    if (this.status !== FileStatus.CANCELLED) {\n      this.widget.settings.onUploadComplete.call(this.widget.element, this.id);\n    }\n\n    if (this.widget.queueRunning) {\n      this.widget.processQueue();\n    } else if (this.widget.settings.queue && this.widget.activeFiles === 0) {\n      this.widget.settings.onComplete.call(this.element);\n    }\n  };\n\n  DmUploaderFile.prototype.getXhr = function()\n  {\n    var file = this;\n    var xhrobj = $.ajaxSettings.xhr();\n\n    if (xhrobj.upload) {\n      xhrobj.upload.addEventListener(\"progress\", function(event) {\n        var percent = 0;\n        var position = event.loaded || event.position;\n        var total = event.total || event.totalSize;\n\n        if (event.lengthComputable) {\n          percent = Math.ceil(position / total * 100);\n        }\n        file.widget.settings.onUploadProgress.call(file.widget.element, file.id, percent);\n      }, false);\n    }\n\n    return xhrobj;\n  };\n\n  DmUploaderFile.prototype.cancel = function(abort)\n  {\n    // The abort flag is to track if we are calling this function directly (using the cancel Method, by id)\n    // or the call comes from the 'gobal' method aka cancelAll.\n    // THis mean that we don't want to trigger the cancel event on file that isn't uploading, UNLESS directly doing it\n    // ... and yes, it could be done prettier. Review (?)\n    abort = (typeof abort === \"undefined\" ? false : abort);\n\n    var myStatus = this.status;\n\n    if (myStatus === FileStatus.UPLOADING || (abort && myStatus === FileStatus.PENDING)) {\n      this.status = FileStatus.CANCELLED;\n    } else {\n      return false;\n    }\n\n    this.widget.settings.onUploadCanceled.call(this.widget.element, this.id);\n\n    if (myStatus === FileStatus.UPLOADING) {\n      this.jqXHR.abort();\n    }\n\n    return true;\n  };\n\n  DmUploaderFile.prototype.canUpload = function()\n  {\n    return (\n      this.status === FileStatus.PENDING ||\n      this.status === FileStatus.FAILED\n    );\n  };\n\n  var DmUploader = function(element, options)\n  {\n    this.element = $(element);\n    this.settings = $.extend({}, defaults, options);\n\n    if (!this.checkSupport()) {\n      $.error(\"Browser not supported by jQuery.dmUploader\");\n\n      this.settings.onFallbackMode.call(this.element);\n\n      return false;\n    }\n\n    this.init();\n\n    return this;\n  };\n\n  DmUploader.prototype.checkSupport = function()\n  {\n    // This one is mandatory for all modes\n    if (typeof window.FormData === \"undefined\") {\n      return false;\n    }\n\n    // Test based on: Modernizr/feature-detects/forms/fileinput.js\n    var exp = new RegExp(\n      \"/(Android (1.0|1.1|1.5|1.6|2.0|2.1))|\"+\n      \"(Windows Phone (OS 7|8.0))|(XBLWP)|\"+\n      \"(ZuneWP)|(w(eb)?OSBrowser)|(webOS)|\"+\n      \"(Kindle\\/(1.0|2.0|2.5|3.0))/\");\n\n    if (exp.test(window.navigator.userAgent)) {\n      return false;\n    }\n\n    return !$(\"<input type=\\\"file\\\" />\").prop(\"disabled\");\n  };\n\n  DmUploader.prototype.init = function()\n  {\n    var widget = this;\n\n    // Queue vars\n    this.queue = [];\n    this.queuePos = -1;\n    this.queueRunning = false;\n    this.activeFiles = 0;\n    this.draggingOver = 0;\n    this.draggingOverDoc = 0;\n\n    var input = widget.element.is(\"input[type=file]\") ?\n      widget.element : widget.element.find(\"input[type=file]\");\n\n    //-- Is the input our main element itself??\n    if (input.length > 0) {\n      input.prop(\"multiple\", this.settings.multiple);\n\n      // Or does it has the input as a child\n      input.on(\"change.\" + pluginName, function(evt) {\n        var files = evt.target && evt.target.files;\n\n        if (!files || !files.length){\n          return;\n        }\n\n        widget.addFiles(files);\n\n        $(this).val(\"\");\n      });\n    }\n\n    if (this.settings.dnd) {\n      this.initDnD();\n    }\n\n    if (input.length === 0 && !this.settings.dnd) {\n      // Trigger an error because if this happens the plugin wont do anything.\n      $.error(\"Markup error found by jQuery.dmUploader\");\n\n      return null;\n    }\n\n    // We good to go, tell them!\n    this.settings.onInit.call(this.element);\n\n    return this;\n  };\n\n  DmUploader.prototype.initDnD = function()\n  {\n    var widget = this;\n\n    // -- Now our own Drop\n    widget.element.on(\"drop.\" + pluginName, function (evt) {\n      evt.preventDefault();\n\n      if (widget.draggingOver > 0){\n        widget.draggingOver = 0;\n        widget.settings.onDragLeave.call(widget.element);\n      }\n\n      var dataTransfer = evt.originalEvent && evt.originalEvent.dataTransfer;\n      if (!dataTransfer || !dataTransfer.files || !dataTransfer.files.length) {\n        return;\n      }\n\n      // Take only the first file if not acepting multiple, this is kinda ugly. Needs Review ?\n      var files = [];\n\n      if (widget.settings.multiple) {\n        files = dataTransfer.files;\n      } else {\n        files.push(dataTransfer.files[0]);\n      }\n\n      widget.addFiles(files);\n    });\n\n    //-- These two events/callbacks are onlt to maybe do some fancy visual stuff\n    widget.element.on(\"dragenter.\" + pluginName, function(evt) {\n      evt.preventDefault();\n\n      if (widget.draggingOver === 0){\n        widget.settings.onDragEnter.call(widget.element);\n      }\n\n      widget.draggingOver++;\n    });\n\n    widget.element.on(\"dragleave.\" + pluginName, function(evt) {\n      evt.preventDefault();\n\n      widget.draggingOver--;\n\n      if (widget.draggingOver === 0){\n        widget.settings.onDragLeave.call(widget.element);\n      }\n    });\n\n    if (!widget.settings.hookDocument) {\n      return;\n    }\n\n    // Adding some off/namepacing to prevent some weird cases when people use multiple instances\n    $(document).off(\"drop.\" + pluginName).on(\"drop.\" + pluginName, function(evt) {\n      evt.preventDefault();\n\n      if (widget.draggingOverDoc > 0){\n        widget.draggingOverDoc = 0;\n        widget.settings.onDocumentDragLeave.call(widget.element);\n      }\n    });\n\n    $(document).off(\"dragenter.\" + pluginName).on(\"dragenter.\" + pluginName, function(evt) {\n      evt.preventDefault();\n\n      if (widget.draggingOverDoc === 0){\n        widget.settings.onDocumentDragEnter.call(widget.element);\n      }\n\n      widget.draggingOverDoc++;\n    });\n\n    $(document).off(\"dragleave.\" + pluginName).on(\"dragleave.\" + pluginName, function(evt) {\n      evt.preventDefault();\n\n      widget.draggingOverDoc--;\n\n      if (widget.draggingOverDoc === 0){\n        widget.settings.onDocumentDragLeave.call(widget.element);\n      }\n    });\n\n    $(document).off(\"dragover.\" + pluginName).on(\"dragover.\" + pluginName, function(evt) {\n      evt.preventDefault();\n    });\n  };\n\n  DmUploader.prototype.releaseEvents = function() {\n    // Leave everyone ALONE ;_;\n\n    this.element.off(\".\" + pluginName);\n    this.element.find(\"input[type=file]\").off(\".\" + pluginName);\n\n    if (this.settings.hookDocument) {\n      $(document).off(\".\" + pluginName);\n    }\n  };\n\n  DmUploader.prototype.validateFile = function(file)\n  {\n    // Check file size\n    if ((this.settings.maxFileSize > 0) &&\n        (file.size > this.settings.maxFileSize)) {\n\n      this.settings.onFileSizeError.call(this.element, file);\n\n      return false;\n    }\n\n    // Check file type\n    if ((this.settings.allowedTypes !== \"*\") &&\n        !file.type.match(this.settings.allowedTypes)){\n\n      this.settings.onFileTypeError.call(this.element, file);\n\n      return false;\n    }\n\n    // Check file extension\n    if (this.settings.extFilter !== null) {\n      var ext = file.name.toLowerCase().split(\".\").pop();\n\n      if ($.inArray(ext, this.settings.extFilter) < 0) {\n        this.settings.onFileExtError.call(this.element, file);\n\n        return false;\n      }\n    }\n\n    return new DmUploaderFile(file, this);\n  };\n\n  DmUploader.prototype.addFiles = function(files)\n  {\n    var nFiles = 0;\n\n    for (var i= 0; i < files.length; i++)\n    {\n      var file = this.validateFile(files[i]);\n\n      if (!file){\n        continue;\n      }\n\n      // If the callback returns false file will not be processed. This may allow some customization\n      var can_continue = this.settings.onNewFile.call(this.element, file.id, file.data);\n      if (can_continue === false) {\n        continue;\n      }\n\n      // If we are using automatic uploading, and not a file queue: go for the upload\n      if (this.settings.auto && !this.settings.queue) {\n        file.upload();\n      }\n\n      this.queue.push(file);\n      \n      nFiles++;\n    }\n\n    // No files were added\n    if (nFiles === 0) {\n      return this;\n    }\n\n    // Are we auto-uploading files?\n    if (this.settings.auto && this.settings.queue && !this.queueRunning) {\n      this.processQueue();\n    }\n\n    return this;\n  };\n\n  DmUploader.prototype.processQueue = function()\n  {\n    this.queuePos++;\n\n    if (this.queuePos >= this.queue.length) {\n      if (this.activeFiles === 0) {\n        this.settings.onComplete.call(this.element);\n      }\n\n      // Wait until new files are droped\n      this.queuePos = (this.queue.length - 1);\n\n      this.queueRunning = false;\n\n      return false;\n    }\n\n    this.queueRunning = true;\n\n    // Start next file\n    return this.queue[this.queuePos].upload();\n  };\n\n  DmUploader.prototype.restartQueue = function()\n  {\n    this.queuePos = -1;\n    this.queueRunning = false;\n\n    this.processQueue();\n  };\n\n  DmUploader.prototype.findById = function(id)\n  {\n    var r = false;\n\n    for (var i = 0; i < this.queue.length; i++) {\n      if (this.queue[i].id === id) {\n        r = this.queue[i];\n        break;\n      }\n    }\n\n    return r;\n  };\n\n  DmUploader.prototype.cancelAll =  function()\n  {\n    var queueWasRunning = this.queueRunning;\n    this.queueRunning = false;\n\n    // cancel 'em all\n    for (var i = 0; i < this.queue.length; i++) {\n      this.queue[i].cancel();\n    }\n\n    if (queueWasRunning) {\n      this.settings.onComplete.call(this.element);\n    }\n  };\n\n  DmUploader.prototype.startAll = function()\n  {\n    if (this.settings.queue) {\n      // Resume queue\n      this.restartQueue();\n    } else {\n      // or upload them all\n      for (var i = 0; i < this.queue.length; i++) {\n        this.queue[i].upload();\n      }\n    }\n  };\n\n  // Public API methods\n  DmUploader.prototype.methods = {\n    start: function(id) {\n      if (this.queueRunning){\n        // Do not allow to manually upload Files when a queue is running\n        return false;\n      }\n\n      var file = false;\n\n      if (typeof id !== \"undefined\") {\n        file = this.findById(id);\n\n        if (!file) {\n          // File not found in stack\n          $.error(\"File not found in jQuery.dmUploader\");\n\n          return false;\n        }\n      }\n      \n      // Trying to Start an upload by ID\n      if (file) {\n        if (file.status === FileStatus.CANCELLED) {\n          file.status = FileStatus.PENDING;\n        }\n        return file.upload();\n      }\n\n      // With no id provided...\n\n      this.startAll();\n\n      return true;\n    },\n    cancel: function(id) {\n      var file = false;\n      if (typeof id !== \"undefined\") {\n        file = this.findById(id);\n\n        if (!file) {\n          // File not found in stack\n          $.error(\"File not found in jQuery.dmUploader\");\n\n          return false;\n        }\n      }\n\n      if (file) {\n        return file.cancel(true);\n      }\n\n      // With no id provided...\n      \n      this.cancelAll();\n\n      return true;\n    },\n    reset: function() {\n\n      this.cancelAll();\n\n      this.queue = [];\n      this.queuePos = -1;\n      this.activeFiles = 0;\n\n      return true;\n    },\n    destroy: function() {\n      this.cancelAll();\n\n      this.releaseEvents();\n\n      this.element.removeData(pluginName);\n    }\n  };\n\n  $.fn.dmUploader = function(options) {\n    var args = arguments;\n\n    if (typeof options === \"string\") {\n      this.each(function() {\n        var plugin = $.data(this, pluginName);\n\n        if (plugin instanceof DmUploader) {\n          if (typeof plugin.methods[options] === \"function\") {\n            plugin.methods[options].apply(plugin, Array.prototype.slice.call(args, 1));\n          } else {\n            $.error(\"Method \" +  options + \" does not exist in jQuery.dmUploader\");\n          }\n        } else {\n          $.error(\"Unknown plugin data found by jQuery.dmUploader\");\n        }\n      });\n    } else {\n      return this.each(function () {\n        if (!$.data(this, pluginName)) {\n          $.data(this, pluginName, new DmUploader(this, options));\n        }\n      });\n    }\n  };\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/dm-file-uploader@1.0.2/node_modules/dm-file-uploader/src/js/jquery.dm-uploader.js\n");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ (function(module) {

"use strict";
module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/scripts/modules/ajax-uploader.js");
/******/ 	
/******/ })()
;