/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scripts/components/image-picker.js":
/*!***************************************************!*\
  !*** ./assets/scripts/components/image-picker.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ \"jquery\");\n// Image Picker\n// by Rodrigo Vera\n//\n// Version 0.3.1\n// Full source at https://github.com/rvera/image-picker\n// MIT License, https://github.com/rvera/image-picker/blob/master/LICENSE\n// Generated by CoffeeScript 1.11.0\n(function () {\n  var ImagePicker,\n    ImagePickerOption,\n    both_array_are_equal,\n    sanitized_options,\n    bind = function bind(fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    },\n    indexOf = [].indexOf || function (item) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (i in this && this[i] === item) return i;\n      }\n      return -1;\n    };\n  jQuery.fn.extend({\n    imagepicker: function imagepicker(opts) {\n      if (opts == null) {\n        opts = {};\n      }\n      return this.each(function () {\n        var select;\n        select = jQuery(this);\n        if (select.data(\"picker\")) {\n          select.data(\"picker\").destroy();\n        }\n        select.data(\"picker\", new ImagePicker(this, sanitized_options(opts)));\n        if (opts.initialized != null) {\n          return opts.initialized.call(select.data(\"picker\"));\n        }\n      });\n    }\n  });\n  sanitized_options = function sanitized_options(opts) {\n    var default_options;\n    default_options = {\n      hide_select: true,\n      show_label: false,\n      initialized: void 0,\n      changed: void 0,\n      clicked: void 0,\n      selected: void 0,\n      limit: void 0,\n      limit_reached: void 0\n    };\n    return jQuery.extend(default_options, opts);\n  };\n  both_array_are_equal = function both_array_are_equal(a, b) {\n    var i, j, len, x;\n    if (!a || !b || a.length !== b.length) {\n      return false;\n    }\n    a = a.slice(0);\n    b = b.slice(0);\n    a.sort();\n    b.sort();\n    for (i = j = 0, len = a.length; j < len; i = ++j) {\n      x = a[i];\n      if (b[i] !== x) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ImagePicker = function () {\n    function ImagePicker(select_element, opts1) {\n      this.opts = opts1 != null ? opts1 : {};\n      this.sync_picker_with_select = bind(this.sync_picker_with_select, this);\n      this.select = jQuery(select_element);\n      this.multiple = this.select.attr(\"multiple\") === \"multiple\";\n      if (this.select.data(\"limit\") != null) {\n        this.opts.limit = parseInt(this.select.data(\"limit\"));\n      }\n      this.build_and_append_picker();\n    }\n    ImagePicker.prototype.destroy = function () {\n      var j, len, option, ref;\n      ref = this.picker_options;\n      for (j = 0, len = ref.length; j < len; j++) {\n        option = ref[j];\n        option.destroy();\n      }\n      this.picker.remove();\n      this.select.off(\"change\", this.sync_picker_with_select);\n      this.select.removeData(\"picker\");\n      return this.select.show();\n    };\n    ImagePicker.prototype.build_and_append_picker = function () {\n      if (this.opts.hide_select) {\n        this.select.hide();\n      }\n      this.select.on(\"change\", this.sync_picker_with_select);\n      if (this.picker != null) {\n        this.picker.remove();\n      }\n      this.create_picker();\n      this.select.after(this.picker);\n      return this.sync_picker_with_select();\n    };\n    ImagePicker.prototype.sync_picker_with_select = function () {\n      var j, len, option, ref, results;\n      ref = this.picker_options;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        option = ref[j];\n        if (option.is_selected()) {\n          results.push(option.mark_as_selected());\n        } else {\n          results.push(option.unmark_as_selected());\n        }\n      }\n      return results;\n    };\n    ImagePicker.prototype.create_picker = function () {\n      this.picker = jQuery(\"<ul class='rs-thumbnails'></ul>\");\n      this.picker_options = [];\n      this.recursively_parse_option_groups(this.select, this.picker);\n      return this.picker;\n    };\n    ImagePicker.prototype.recursively_parse_option_groups = function (scoped_dom, target_container) {\n      var container, j, k, len, len1, option, option_group, ref, ref1, results;\n      ref = scoped_dom.children(\"optgroup\");\n      for (j = 0, len = ref.length; j < len; j++) {\n        option_group = ref[j];\n        option_group = jQuery(option_group);\n        container = jQuery(\"<ul></ul>\");\n        container.append(jQuery(\"<li class='group_title'>\" + option_group.attr(\"label\") + \"</li>\"));\n        target_container.append(jQuery(\"<li class='group'>\").append(container));\n        this.recursively_parse_option_groups(option_group, container);\n      }\n      ref1 = function () {\n        var l, len1, ref1, results1;\n        ref1 = scoped_dom.children(\"option\");\n        results1 = [];\n        for (l = 0, len1 = ref1.length; l < len1; l++) {\n          option = ref1[l];\n          results1.push(new ImagePickerOption(option, this, this.opts));\n        }\n        return results1;\n      }.call(this);\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        option = ref1[k];\n        this.picker_options.push(option);\n        if (!option.has_image()) {\n          continue;\n        }\n        results.push(target_container.append(option.node));\n      }\n      return results;\n    };\n    ImagePicker.prototype.has_implicit_blanks = function () {\n      var option;\n      return function () {\n        var j, len, ref, results;\n        ref = this.picker_options;\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          option = ref[j];\n          if (option.is_blank() && !option.has_image()) {\n            results.push(option);\n          }\n        }\n        return results;\n      }.call(this).length > 0;\n    };\n    ImagePicker.prototype.selected_values = function () {\n      if (this.multiple) {\n        return this.select.val() || [];\n      } else {\n        return [this.select.val()];\n      }\n    };\n    ImagePicker.prototype.toggle = function (imagepicker_option, original_event) {\n      var new_values, old_values, selected_value;\n      old_values = this.selected_values();\n      selected_value = imagepicker_option.value().toString();\n      if (this.multiple) {\n        if (indexOf.call(this.selected_values(), selected_value) >= 0) {\n          new_values = this.selected_values();\n          new_values.splice(jQuery.inArray(selected_value, old_values), 1);\n          this.select.val([]);\n          this.select.val(new_values);\n        } else {\n          if (this.opts.limit != null && this.selected_values().length >= this.opts.limit) {\n            if (this.opts.limit_reached != null) {\n              this.opts.limit_reached.call(this.select);\n            }\n          } else {\n            this.select.val(this.selected_values().concat(selected_value));\n          }\n        }\n      } else {\n        if (this.has_implicit_blanks() && imagepicker_option.is_selected()) {\n          this.select.val(\"\");\n        } else {\n          this.select.val(selected_value);\n        }\n      }\n      if (!both_array_are_equal(old_values, this.selected_values())) {\n        this.select.change();\n        if (this.opts.changed != null) {\n          return this.opts.changed.call(this.select, old_values, this.selected_values(), original_event);\n        }\n      }\n    };\n    return ImagePicker;\n  }();\n  ImagePickerOption = function () {\n    function ImagePickerOption(option_element, picker, opts1) {\n      this.picker = picker;\n      this.opts = opts1 != null ? opts1 : {};\n      this.clicked = bind(this.clicked, this);\n      this.option = jQuery(option_element);\n      this.create_node();\n    }\n    ImagePickerOption.prototype.destroy = function () {\n      return this.node.find(\".rs-thumbnail__img\").off(\"click\", this.clicked);\n    };\n    ImagePickerOption.prototype.has_image = function () {\n      return true;\n    };\n    ImagePickerOption.prototype.is_blank = function () {\n      return !(this.value() != null && this.value() !== \"\");\n    };\n    ImagePickerOption.prototype.is_selected = function () {\n      var select_value;\n      select_value = this.picker.select.val();\n      if (this.picker.multiple) {\n        return jQuery.inArray(this.value(), select_value) >= 0;\n      } else {\n        return this.value() === select_value;\n      }\n    };\n    ImagePickerOption.prototype.mark_as_selected = function () {\n      return this.node.find(\".rs-thumbnail__img\").addClass(\"rs-selected\");\n    };\n    ImagePickerOption.prototype.unmark_as_selected = function () {\n      return this.node.find(\".rs-thumbnail__img\").removeClass(\"rs-selected\");\n    };\n    ImagePickerOption.prototype.value = function () {\n      return this.option.val();\n    };\n    ImagePickerOption.prototype.label = function () {\n      if (this.option.data(\"img-label\")) {\n        return this.option.data(\"img-label\");\n      } else {\n        return this.option.val();\n      }\n    };\n    ImagePickerOption.prototype.clicked = function (event) {\n      this.picker.toggle(this, event);\n      if (this.opts.clicked != null) {\n        this.opts.clicked.call(this.picker.select, this, event);\n      }\n      if (this.opts.selected != null && this.is_selected()) {\n        return this.opts.selected.call(this.picker.select, this, event);\n      }\n    };\n    ImagePickerOption.prototype.create_node = function () {\n      var image, imgAlt, imgClass, thumbnail;\n      this.node = jQuery(\"<li/>\");\n      image = jQuery(\"<img class='image_picker_image'/>\");\n      image.attr(\"src\", this.option.html());\n      thumbnail = jQuery(\"<div class='rs-thumbnail__img'>\");\n      imgClass = this.option.data(\"img-class\");\n      if (imgClass) {\n        this.node.addClass(imgClass);\n        image.addClass(imgClass);\n        thumbnail.addClass(imgClass);\n      }\n      imgAlt = this.option.data(\"img-alt\");\n      if (imgAlt) {\n        image.attr('alt', imgAlt);\n      }\n      thumbnail.on(\"click\", this.clicked);\n      thumbnail.append(image);\n      if (this.opts.show_label) {\n        thumbnail.append(jQuery(\"<p/>\").addClass('rs-thumbnail__label').html(this.label()));\n      }\n      this.node.append(thumbnail);\n      return this.node;\n    };\n    return ImagePickerOption;\n  }();\n}).call(this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/scripts/components/image-picker.js\n");

/***/ }),

/***/ "./assets/scripts/modules/image-picker.js":
/*!************************************************!*\
  !*** ./assets/scripts/modules/image-picker.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_image_picker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/image-picker */ \"./assets/scripts/components/image-picker.js\");\n/* harmony import */ var _components_image_picker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components_image_picker__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var $ = __webpack_require__(/*! jquery */ \"jquery\");\n\n$.each($('.rs-form--image-picker select'), function (index, el) {\n  $(el).imagepicker($(el).data('settings'));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvc2NyaXB0cy9tb2R1bGVzL2ltYWdlLXBpY2tlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQW9DO0FBQ3BDQSxDQUFDLENBQUNDLElBQUksQ0FBQ0QsQ0FBQyxDQUFDLCtCQUErQixDQUFDLEVBQUUsVUFBU0UsS0FBSyxFQUFFQyxFQUFFLEVBQUU7RUFDM0RILENBQUMsQ0FBQ0csRUFBRSxDQUFDLENBQUNDLFdBQVcsQ0FBQ0osQ0FBQyxDQUFDRyxFQUFFLENBQUMsQ0FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzdDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlbnByaXNlLWZyb250ZW5kLXRvb2wvLi9hc3NldHMvc2NyaXB0cy9tb2R1bGVzL2ltYWdlLXBpY2tlci5qcz8xZDA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vY29tcG9uZW50cy9pbWFnZS1waWNrZXInO1xuJC5lYWNoKCQoJy5ycy1mb3JtLS1pbWFnZS1waWNrZXIgc2VsZWN0JyksIGZ1bmN0aW9uKGluZGV4LCBlbCkge1xuICAgICQoZWwpLmltYWdlcGlja2VyKCQoZWwpLmRhdGEoJ3NldHRpbmdzJykpO1xufSk7Il0sIm5hbWVzIjpbIiQiLCJlYWNoIiwiaW5kZXgiLCJlbCIsImltYWdlcGlja2VyIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/scripts/modules/image-picker.js\n");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/scripts/modules/image-picker.js");
/******/ 	
/******/ })()
;