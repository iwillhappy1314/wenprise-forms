{"version":3,"sources":["webpack:///./assets/scripts/modules/jquery.appendGrid-1.7.1.js","webpack:///./assets/scripts/modules/bootstrap-button.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js"],"names":["$","_defaultInitOptions","caption","captionTooltip","initRows","maxRowsAllowed","initData","columns","i18n","idPrefix","rowDragging","hideButtons","hideRowNumColumn","rowButtonsInFront","rowCountName","buttonClasses","sectionClasses","customGridButtons","customRowButtons","customFooterButtons","useSubPanel","maintainScroll","maxBodyHeight","autoColumnWidth","_defaultCallbackContainer","nameFormatter","dataLoaded","rowDataLoaded","afterRowAppended","afterRowInserted","afterRowSwapped","beforeRowRemove","afterRowRemoved","afterRowDragged","subPanelBuilder","subPanelGetter","maxNumRowsReached","_defaultColumnOptions","type","name","value","display","displayCss","displayTooltip","headerSpan","cellCss","ctrlAttr","ctrlProp","ctrlCss","ctrlClass","ctrlOptions","uiOption","uiTooltip","resizable","invisible","emptyCriteria","customBuilder","customGetter","customSetter","onClick","onChange","_systemMessages","noColumnInfo","elemNotTable","notInit","getValueMultiGrid","notSupportMethod","_defaultTextResources","append","removeLast","insert","remove","moveUp","moveDown","rowDrag","rowEmpty","_defaultButtonClasses","_defaultSectionClasses","header","body","subPanel","footer","_defaultHideButtons","_methods","init","options","this","length","isArray","alert","tbWrap","tbHead","tbBody","tbFoot","tbColGp","tbRow","tbCell","tbWhole","isEmpty","tagName","tbHeadCellRowNum","tbHeadCellRowButton","settings","extend","_uniqueIndex","_rowOrder","_isDataLoaded","_visibleCount","_finalColSpan","_hideLastColumn","_wrapperId","_calculateWidth","isPlainObject","_i18n","_buttonClasses","_sectionClasses","id","Date","getTime","document","createElement","className","attr","addClass","insertAfter","empty","appendTo","prependTo","wrap","css","appendChild","pendingSkipCol","z","columnOpt","tooltip","isFunction","text","insertBefore","firstChild","childnodes","colSpan","button","createGridButton","title","click","evt","insertRow","preventDefault","removeRow","y","buttonCfg","uiButton","atTheFront","prepend","makeCustomBottomButton","style","sortable","axis","containment","handle","helper","e","tr","org","children","clone","each","index","width","eq","helperSelect","orgSelect","find","update","event","ui","uniqueIndex","item","substring","lastIndexOf","tbRowIndex","rowIndex","isMoveUp","data","startIndex","splice","sortSequence","saveSetting","gridRowDragged","originalPosition","top","position","loadData","appendGrid","showEmptyMessage","calculateColumnWidth","isReady","checkGridAndGetSettings","isDataLoaded","load","records","emptyGrid","appendRow","numOfRowOrRowArray","callerUniqueIndex","isNumeric","insertResult","insertUniqueIndex","addedRows","focus","target","moveUpRow","trTarget","trSwap","trAdtTarget","swapSeq","oldIndex","getElementsByTagName","findRowIndex","getElementById","removeChild","html","removeClass","blur","moveDownRow","trAdtSwap","showColumn","colIndex","hideColumn","isColumnInvisible","getRowCount","getUniqueIndex","getRowIndex","getRowValue","loopIndex","result","getAllValue","objectMode","rowValue","push","getCtrlValue","setCtrlValue","getCellCtrl","getCellCtrlByUniqueIndex","getRowOrder","slice","getColumns","isRowEmpty","removeEmptyRows","grid","noMsg","ctrl","parentIndex","hidden","tbSubRow","reachMaxRow","calColWidth","oldHeight","oldScroll","numOfRow","height","scrollParent","scrollTop","childNodes","rowSpan","ctrlName","ctrlId","lastGroupName","lastGroupElem","x","group","label","option","val","Option","arrayOpt","split","eqIndex","indexOf","selectmenu","textAlign","search","err","datepicker","spinner","autocomplete","prop","caller","callback","change","tabindex","rowUniqueIndex","makeCustomRowButton","scroll","scrollHeight","offsetHeight","newHeight","exButton","btnClass","btnCss","btnAttr","rowData","force","pop","lastChild","skipWidthCalculation","$emptyCell","isInit","r","c","join","suffix","adtData","newData","key","columnName","checked","element","param","uiIcon","genButton","nodeType","icon","showLabel","currentValue","defaultValue","$tbWhole","$scroller","tbHeadRow","tbBodyRow","marginThreshold","fn","modal","colLimit","Math","min","headCellWidth","clientWidth","bodyCellWidth","offsetWidth","params","apply","Array","prototype","call","arguments","jQuery","Error","version","jquery","Button","$element","DEFAULTS","isLoading","Plugin","$this","toggle","setState","VERSION","loadingText","state","d","$el","is","resetText","setTimeout","proxy","removeAttr","changed","$parent","closest","$input","hasClass","toggleClass","trigger","old","Constructor","noConflict","on","$btn","first","test","path","replace","window","concat","_typeof2","obj","Symbol","iterator","constructor","_typeof"],"mappings":"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","file":"app/tableinput-0cf823f0.js","sourcesContent":["/*!\n* jQuery appendGrid v1.7.1\n* https://appendgrid.apphb.com/\n*\n* Copyright 2017 Albert L.\n* Dual licensed under the LGPL (http://www.gnu.org/licenses/lgpl.html)\n* and MIT (http://www.opensource.org/licenses/mit-license.php) licenses.\n*\n* Depends:\n* jQuery v1.12.4+\n* jQuery UI v1.12.1+\n*/\n(function ($) {\n    // The default initial options.\n    var _defaultInitOptions = {\n        // The text as table caption, set null to disable caption generation.\n        caption: null,\n        // Tooltip for caption.\n        captionTooltip: null,\n        // The total number of empty rows generated when init the grid. This will be ignored if `initData` is assigned.\n        initRows: 3,\n        // The maximum number of rows allowed in this grid.\n        maxRowsAllowed: 0,\n        // An array of data to be filled after initialized the grid.\n        initData: null,\n        // Array of column options.\n        columns: null,\n        // Labels or messages used in grid.\n        i18n: null,\n        // The ID prefix of controls generated inside the grid. Table ID will be used if not defined.\n        idPrefix: null,\n        // Enable row dragging by using jQuery UI sortable on grid rows.\n        rowDragging: false,\n        // Hide the buttons at the end of rows or bottom of grid.\n        hideButtons: null,\n        // Hide the row number column.\n        hideRowNumColumn: false,\n        // Generate row buttom column in the front of input columns.\n        rowButtonsInFront: false,\n        // The variable name of row count used for object mode of getAllValue\n        rowCountName: '_RowCount',\n        // The extra class names for buttons.\n        buttonClasses: null,\n        // The extra class names for table sections.\n        sectionClasses: null,\n        // Custom the standard grid buttons.\n        customGridButtons: null,\n        // Adding extra button(s) at the end of rows.\n        customRowButtons: null,\n        // Adding extra button(s) at the bottom of grid.\n        customFooterButtons: null,\n        // Use the sub panel or not\n        useSubPanel: false,\n        // Maintain the scroll position after appended or removed last row.\n        maintainScroll: false,\n        // The maximum height of grid content, scroll bar will be display when the height is greater than this value.\n        maxBodyHeight: 0,\n        // Auto calculate the column width when scroll bar on table body is in use.\n        autoColumnWidth: true\n    };\n    var _defaultCallbackContainer = {\n        // The callback function for format the HTML name of generated controls.\n        nameFormatter: null,\n        // The callback function to be triggered after all data loaded to grid.\n        dataLoaded: null,\n        // The callback function to be triggered after data loaded to a row.\n        rowDataLoaded: null,\n        // The callback function to be triggered after new row appended.\n        afterRowAppended: null,\n        // The callback function to be triggered after new row inserted.\n        afterRowInserted: null,\n        // The callback function to be triggered after grid row swapped.\n        afterRowSwapped: null,\n        // The callback function to be triggered before grid row remove.\n        beforeRowRemove: null,\n        // The callback function to be triggered after grid row removed.\n        afterRowRemoved: null,\n        // The callback function to be triggered after grid row dragged.\n        afterRowDragged: null,\n        // The callback function for generating sub panel content.\n        subPanelBuilder: null,\n        // The callback function for getting values from sub panel. Used for `getAllValue` method.\n        subPanelGetter: null,\n        // The callback function to be triggered when row(s) is/are adding to grid but the maximum number of rows allowed is reached.\n        maxNumRowsReached: null\n    };\n    // Default column options.\n    var _defaultColumnOptions = {\n        // Type of column control.\n        type: 'text',\n        // Name of column.\n        name: null,\n        // Default value.\n        value: null,\n        // Display text on the header section.\n        display: null,\n        // Extra CSS setting to be added to display text.\n        displayCss: null,\n        // Tooltip for column head.\n        displayTooltip: null,\n        // The `colspan` setting on the column header.\n        headerSpan: 1,\n        // Extra CSS setting to be added to the control container table cell.\n        cellCss: null,\n        // Extra attributes to be added to the control.\n        ctrlAttr: null,\n        // Extra properties to be added to the control.\n        ctrlProp: null,\n        // Extra CSS to be added to the control.\n        ctrlCss: null,\n        // Extra name of class to be added to the control.\n        ctrlClass: null,\n        // The available option for building `select` type control.\n        ctrlOptions: null,\n        // Options for initalize jQuery UI widget.\n        uiOption: null,\n        // Options for initalize jQuery UI tooltip.\n        uiTooltip: null,\n        // Let column resizable by using jQuery UI Resizable Interaction.\n        resizable: false,\n        // Show or hide column after initialized.\n        invisible: false,\n        // The value to compare for indentify this column value is empty.\n        emptyCriteria: null,\n        // Callback function to build custom type control.\n        customBuilder: null,\n        // Callback function to get control value.\n        customGetter: null,\n        // Callback function to set control value.\n        customSetter: null,\n        // The `OnClick` event callback of control.\n        onClick: null,\n        // The `OnChange` event callback of control.\n        onChange: null\n    };\n    var _systemMessages = {\n        noColumnInfo: 'Cannot initial grid without column information!',\n        elemNotTable: 'Cannot initial grid on element other than TABLE!',\n        notInit: '`appendGrid` does not initialized',\n        getValueMultiGrid: 'Cannot get values on multiple grid',\n        notSupportMethod: 'Method is not supported by `appendGrid`: '\n    };\n    var _defaultTextResources = {\n        append: 'Append Row',\n        removeLast: 'Remove Last Row',\n        insert: 'Insert Row Above',\n        remove: 'Remove Current Row',\n        moveUp: 'Move Up',\n        moveDown: 'Move Down',\n        rowDrag: 'Sort Row',\n        rowEmpty: 'This Grid Is Empty'\n    };\n    var _defaultButtonClasses = { append: null, removeLast: null, insert: null, remove: null, moveUp: null, moveDown: null, rowDrag: null };\n    var _defaultSectionClasses = { caption: null, header: null, body: null, subPanel: null, footer: null };\n    var _defaultHideButtons = { append: false, removeLast: false, insert: false, remove: false, moveUp: false, moveDown: false };\n    var _methods = {\n        init: function (options) {\n            var target = this;\n            if (target.length > 0) {\n                // Check mandatory paramters included\n                if (!$.isArray(options.columns) || options.columns.length == 0) {\n                    alert(_systemMessages.noColumnInfo);\n                    return target;\n                }\n                // Check target element is table or not\n                var tbWhole = target[0], tbWrap, tbHead, tbBody, tbFoot, tbColGp, tbRow, tbCell;\n                if (isEmpty(tbWhole.tagName) || tbWhole.tagName != 'TABLE') {\n                    alert(_systemMessages.elemNotTable);\n                    return target;\n                }\n                // Generate settings\n                var settings = $.extend({}, _defaultInitOptions, _defaultCallbackContainer, options);\n                // Add internal settings\n                $.extend(settings, {\n                    // The UniqueIndex accumulate counter\n                    _uniqueIndex: 0,\n                    // The row order array\n                    _rowOrder: [],\n                    // Indicate data is loaded or not\n                    _isDataLoaded: false,\n                    // Visible column count for internal calculation\n                    _visibleCount: 0,\n                    // Total colSpan count after excluding `hideRowNumColumn` and not generating last column\n                    _finalColSpan: 0,\n                    // Indicate to hide last column or not\n                    _hideLastColumn: false,\n                    // The element ID of the `appendGrid` wrapper\n                    _wrapperId: null,\n                    // \n                    _calculateWidth: true\n                });\n                // Labels or messages used in grid\n                if ($.isPlainObject(options.i18n))\n                    settings._i18n = $.extend({}, _defaultTextResources, options.i18n);\n                else\n                    settings._i18n = $.extend({}, _defaultTextResources);\n                // The extra class names for buttons\n                if ($.isPlainObject(options.buttonClasses))\n                    settings._buttonClasses = $.extend({}, _defaultButtonClasses, options.buttonClasses);\n                else\n                    settings._buttonClasses = $.extend({}, _defaultButtonClasses);\n                // The extra class names for sections\n                if ($.isPlainObject(options.sectionClasses))\n                    settings._sectionClasses = $.extend({}, _defaultSectionClasses, options.sectionClasses);\n                else\n                    settings._sectionClasses = $.extend({}, _defaultSectionClasses);\n                // Make sure the `hideButtons` setting defined\n                if ($.isPlainObject(options.hideButtons))\n                    settings.hideButtons = $.extend({}, _defaultHideButtons, options.hideButtons);\n                else\n                    settings.hideButtons = $.extend({}, _defaultHideButtons);\n                // Check `idPrefix` is defined\n                if (isEmpty(settings.idPrefix)) {\n                    // Check table ID defined\n                    if (isEmpty(tbWhole.id) || tbWhole.id == '') {\n                        // Generate an ID using current time\n                        settings.idPrefix = 'ag' + new Date().getTime();\n                    }\n                    else {\n                        settings.idPrefix = tbWhole.id;\n                    }\n                }\n                // Check custom grid button parameters\n                if (!$.isPlainObject(settings.customGridButtons)) {\n                    settings.customGridButtons = {};\n                }\n                // Check rowDragging and useSubPanel option\n                if (settings.useSubPanel && settings.rowDragging) {\n                    settings.rowDragging = false;\n                }\n                // Create thead and tbody\n                tbHead = document.createElement('thead');\n                tbHead.className = 'ui-widget-header';\n                tbBody = document.createElement('tbody');\n                tbBody.className = 'ui-widget-content';\n                tbFoot = document.createElement('tfoot');\n                tbFoot.className = 'ui-widget-header';\n                tbColGp = document.createElement('colgroup');\n                // Prepare the table element\n                settings._wrapperId = settings.idPrefix + '-wrapper';\n                tbWrap = document.createElement('div');\n                $(tbWrap).attr('id', settings._wrapperId).addClass('appendGrid').insertAfter(tbWhole);\n                $(tbWhole).empty().addClass('ui-widget').appendTo(tbWrap);\n                // Check if content scrolling is enabled\n                if (settings.maxBodyHeight > 0) {\n                    // Seperate the thead and tfoot from source table\n                    $('<table></table>').addClass('ui-widget head').append(tbHead).prependTo(tbWrap);\n                    $(tbWhole).addClass('body').wrap($('<div></div>').addClass('scroller').css('max-height', settings.maxBodyHeight)).append(tbColGp, tbBody);\n                    $('<table></table>').addClass('ui-widget foot').append(tbFoot).appendTo(tbWrap);\n                } else {\n                    // Add thead, tbody and tfoot to the same table\n                    $(tbWhole).addClass('head body foot').append(tbColGp, tbHead, tbBody, tbFoot);\n                }\n                // Handle header row\n                var tbHeadCellRowNum, tbHeadCellRowButton;\n                tbHead.appendChild(tbRow = document.createElement('tr'));\n                if (settings._sectionClasses.header) {\n                    tbRow.className = 'columnHead ' + settings._sectionClasses.header;\n                } else {\n                    tbRow.className = 'columnHead';\n                }\n                if (!settings.hideRowNumColumn) {\n                    tbRow.appendChild(tbHeadCellRowNum = document.createElement('td'));\n                    tbHeadCellRowNum.className = 'ui-widget-header first';\n                    // Add column group for scrolling\n                    tbColGp.appendChild(document.createElement('col'));\n                }\n                // Prepare column information and add column header\n                var pendingSkipCol = 0;\n                for (var z = 0; z < settings.columns.length; z++) {\n                    // Assign default setting\n                    var columnOpt = $.extend({}, _defaultColumnOptions, settings.columns[z]);\n                    settings.columns[z] = columnOpt;\n                    // Skip hidden\n                    if (settings.columns[z].type != 'hidden') {\n                        // Check column is invisible\n                        if (!settings.columns[z].invisible) {\n                            settings._visibleCount++;\n                        }\n                        // Check skip header colSpan\n                        if (pendingSkipCol == 0) {\n                            var className = 'ui-widget-header';\n                            if (settings.columns[z].invisible) className += ' invisible';\n                            if (settings.columns[z].resizable) className += ' resizable';\n                            tbRow.appendChild(tbCell = document.createElement('td'));\n                            tbCell.id = settings.idPrefix + '_' + settings.columns[z].name + '_td_head';\n                            tbCell.className = className;\n                            if (settings.columns[z].displayCss) $(tbCell).css(settings.columns[z].displayCss);\n                            if (settings.columns[z].headerSpan > 1) {\n                                $(tbCell).attr('colSpan', settings.columns[z].headerSpan);\n                                pendingSkipCol = settings.columns[z].headerSpan - 1;\n                            }\n                            // Add tooltip\n                            if ($.isPlainObject(settings.columns[z].displayTooltip)) {\n                                $(tbCell).tooltip(settings.columns[z].displayTooltip);\n                            }\n                            else if (!isEmpty(settings.columns[z].displayTooltip)) {\n                                $(tbCell).attr('title', settings.columns[z].displayTooltip).tooltip();\n                            }\n                            // Check to set display text or generate by function\n                            if ($.isFunction(settings.columns[z].display)) {\n                                settings.columns[z].display(tbCell);\n                            } else if (!isEmpty(settings.columns[z].display)) {\n                                $(tbCell).text(settings.columns[z].display);\n                            }\n                            // Add column group for scrolling\n                            tbColGp.appendChild(document.createElement('col'));\n                        } else {\n                            pendingSkipCol--;\n                        }\n                    }\n                }\n                // Enable columns resizable\n                //if (!isEmpty(jQuery.ui.resizable)) {\n                //    $('td.resizable', tbHead).resizable({ handles: 'e' });\n                //}\n                // Check to hide last column or not\n                if (settings.hideButtons.insert && settings.hideButtons.remove\n                        && settings.hideButtons.moveUp && settings.hideButtons.moveDown\n                        && (!$.isArray(settings.customRowButtons) || settings.customRowButtons.length == 0)) {\n                    settings._hideLastColumn = true;\n                }\n                // Calculate the `_finalColSpan` value\n                settings._finalColSpan = settings._visibleCount;\n                if (!settings.hideRowNumColumn) settings._finalColSpan++;\n                if (!settings._hideLastColumn) settings._finalColSpan++;\n                // Generate last column header if needed\n                if (!settings._hideLastColumn) {\n                    if (settings.rowButtonsInFront) {\n                        if (settings.hideRowNumColumn) {\n                            // Insert a cell at the front\n                            tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.firstChild);\n                        } else {\n                            // Span the first cell that across row number and row button cells\n                            // tbHeadCellRowNum.colSpan = 2;\n                            // tbHeadCellRowButton = tbHeadCellRowNum;\n\n                            // Insert a cell as the second column\n                            tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.childnodes[1]);\n                        }\n                    } else {\n                        tbRow.appendChild(tbHeadCellRowButton = document.createElement('td'));\n                    }\n                    tbHeadCellRowButton.className = 'ui-widget-header last';\n                    tbHeadCellRowButton.id = settings.idPrefix + '_last_td_head';\n                    // Add column group for scrolling\n                    tbColGp.appendChild(document.createElement('col'));\n                }\n                // Add caption when defined\n                if (settings.caption) {\n                    tbHead.insertBefore(tbRow = document.createElement('tr'), tbHead.firstChild);\n                    if (settings._sectionClasses.caption) {\n                        tbRow.className = settings._sectionClasses.caption;\n                    }\n                    tbRow.appendChild(tbCell = document.createElement('td'));\n                    tbCell.id = settings.idPrefix + '_caption_td';\n                    tbCell.className = 'ui-state-active caption';\n                    tbCell.colSpan = settings._finalColSpan;\n                    // Add tooltip\n                    if ($.isPlainObject(settings.captionTooltip)) {\n                        $(tbCell).tooltip(settings.captionTooltip);\n                    } else if (!isEmpty(settings.captionTooltip)) {\n                        $(tbCell).attr('title', settings.captionTooltip).tooltip();\n                    }\n                    // Check to set display text or generate by function\n                    if ($.isFunction(settings.caption)) {\n                        settings.caption(tbCell);\n                    } else {\n                        $(tbCell).text(settings.caption);\n                    }\n                }\n                // Handle footer row\n                tbFoot.appendChild(tbRow = document.createElement('tr'));\n                if (settings._sectionClasses.footer) {\n                    tbRow.className = settings._sectionClasses.footer;\n                }\n                tbRow.appendChild(tbCell = document.createElement('td'));\n                tbCell.id = settings.idPrefix + '_footer_td';\n                tbCell.colSpan = settings._finalColSpan;\n                $('<input/>').attr({\n                    type: 'hidden',\n                    id: settings.idPrefix + '_rowOrder',\n                    name: settings.idPrefix + '_rowOrder'\n                }).appendTo(tbCell);\n                // Make row invisible if all buttons are hidden\n                if (settings.hideButtons.append && settings.hideButtons.removeLast\n                        && (!$.isArray(settings.customFooterButtons) || settings.customFooterButtons.length == 0)) {\n                    tbRow.style.display = 'none';\n                } else {\n                    if (!settings.hideButtons.append) {\n                        var button = createGridButton(settings.customGridButtons.append, 'ui-icon-plusthick')\n\t\t\t\t\t\t.attr({ title: settings._i18n.append }).addClass('append')\n                        .click(function (evt) {\n                            insertRow(tbWhole, 1, null, null);\n                            if (evt && evt.preventDefault) evt.preventDefault();\n                            return false;\n                        }).appendTo(tbCell);\n                        if (!isEmpty(settings._buttonClasses.append)) button.addClass(settings._buttonClasses.append).text('增加一行');\n                    }\n                    if (!settings.hideButtons.removeLast) {\n                        var button = createGridButton(settings.customGridButtons.removeLast, 'ui-icon-closethick')\n\t\t\t\t\t\t.attr({ title: settings._i18n.removeLast }).addClass('removeLast')\n\t\t\t\t\t\t.click(function (evt) {\n\t\t\t\t\t\t    removeRow(tbWhole, null, this.value, false);\n\t\t\t\t\t\t    if (evt && evt.preventDefault) evt.preventDefault();\n\t\t\t\t\t\t    return false;\n\t\t\t\t\t\t}).appendTo(tbCell);\n                        if (!isEmpty(settings._buttonClasses.removeLast)) button.addClass(settings._buttonClasses.removeLast).text('删除');\n                    }\n                    if (settings.customFooterButtons && settings.customFooterButtons.length) {\n                        // Add front buttons\n                        for (var y = settings.customFooterButtons.length - 1; y >= 0; y--) {\n                            var buttonCfg = settings.customFooterButtons[y];\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\n                                $(tbCell).prepend(makeCustomBottomButton(tbWhole, buttonCfg));\n                            }\n                        }\n                        // Add end buttons\n                        for (var y = 0; y < settings.customFooterButtons.length; y++) {\n                            var buttonCfg = settings.customFooterButtons[y];\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\n                                $(tbCell).append(makeCustomBottomButton(tbWhole, buttonCfg));\n                            }\n                        }\n                    }\n                }\n                // Enable dragging\n                if (settings.rowDragging) {\n                    $(tbBody).sortable({\n                        axis: 'y',\n                        containment: tbWhole,\n                        handle: '.rowDrag',\n                        helper: function (e, tr) {\n                            var org = tr.children();\n                            var helper = tr.clone();\n                            // Fix the cell width of cloned table cell\n                            helper.children().each(function (index) {\n                                $(this).width(org.eq(index).width());\n                                // Set the value of drop down list when drag (Issue #18)\n                                var helperSelect = $('select', this);\n                                if (helperSelect.length > 0) {\n                                    for (var y = 0; y < helperSelect.length; y++) {\n                                        var orgSelect = org.eq(index).find('select');\n                                        if (orgSelect.length > y) {\n                                            helperSelect[y].value = orgSelect[y].value;\n                                        }\n                                    }\n                                }\n                            });\n                            return helper;\n                        },\n                        update: function (event, ui) {\n                            var uniqueIndex = ui.item[0].id.substring(ui.item[0].id.lastIndexOf('_') + 1);\n                            var tbRowIndex = ui.item[0].rowIndex - $('tr', tbHead).length;\n                            gridRowDragged(tbWhole, ui.originalPosition.top > ui.position.top, uniqueIndex, tbRowIndex);\n                        }\n                    });\n                }\n                // Save options\n                $(tbWhole).data('appendGrid', settings);\n                if ($.isArray(options.initData)) {\n                    // Load data if initData is array\n                    loadData(tbWhole, options.initData, true);\n                } else {\n                    // Add empty rows\n                    $(tbWhole).appendGrid('appendRow', settings.initRows);\n                }\n                // Show no rows in grid\n                if (settings._rowOrder.length == 0) {\n                    showEmptyMessage(tbWrap, settings, true);\n                }\n                // Calculate column width\n                if (settings.maxBodyHeight > 0) {\n                    if (settings.autoColumnWidth) {\n                        calculateColumnWidth(tbWrap);\n                    } else {\n                        $('table.foot', tbWrap).width($(tbWhole).width());\n                    }\n                }\n            }\n            return target;\n        },\n        isReady: function () {\n            // Check the appendGrid is initialized or not\n            var settings = checkGridAndGetSettings(this, true);\n            if (settings) {\n                return true;\n            }\n            return false;\n        },\n        isDataLoaded: function () {\n            // Check the grid data is loaded by `load` method or `initData` parameter or not\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                return settings._isDataLoaded;\n            }\n            return false;\n        },\n        load: function (records) {\n            var settings = checkGridAndGetSettings(this), target = this;\n            if (settings) {\n                if (records != null && records.length > 0) {\n                    loadData(target[0], records, false);\n                } else {\n                    emptyGrid(target[0]);\n                }\n            }\n            return target;\n        },\n        appendRow: function (numOfRowOrRowArray) {\n            return this.appendGrid('insertRow', numOfRowOrRowArray);\n        },\n        insertRow: function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                if (($.isArray(numOfRowOrRowArray) && numOfRowOrRowArray.length > 0) || ($.isNumeric(numOfRowOrRowArray) && numOfRowOrRowArray > 0)) {\n                    // Define variables\n                    var tbWhole = this[0];\n                    insertResult = insertRow(tbWhole, numOfRowOrRowArray, rowIndex, callerUniqueIndex);\n                    // Reorder sequence as needed\n                    if ($.isNumeric(rowIndex) || $.isNumeric(callerUniqueIndex)) {\n                        // Sort sequence\n                        sortSequence(tbWhole, insertResult.rowIndex);\n                        // Move focus\n                        var insertUniqueIndex = settings._rowOrder[insertResult.addedRows[0]];\n                        $('#' + settings.idPrefix + '_Insert_' + insertUniqueIndex, tbWhole).focus();\n                    }\n                }\n            }\n            return this;\n        },\n        removeRow: function (rowIndex, uniqueIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && settings._rowOrder.length > 0) {\n                removeRow(this[0], rowIndex, uniqueIndex, true);\n            }\n            return this;\n        },\n        emptyGrid: function () {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                emptyGrid(this[0]);\n            }\n            return target;\n        },\n        moveUpRow: function (rowIndex, uniqueIndex) {\n            var settings = checkGridAndGetSettings(this), target = this;\n            if (settings) {\n                var tbWhole = target[0], trTarget, trSwap, trAdtTarget, swapSeq, oldIndex = null;\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\n                if ($.isNumeric(rowIndex) && rowIndex > 0 && rowIndex < settings._rowOrder.length) {\n                    oldIndex = rowIndex;\n                    uniqueIndex = settings._rowOrder[rowIndex];\n                } else if ($.isNumeric(uniqueIndex)) {\n                    oldIndex = findRowIndex(uniqueIndex, settings);\n                }\n                if (oldIndex != null && oldIndex > 0) {\n                    // Get row to swap\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex - 1], tbWhole);\n                    // Get the sub panel row if used\n                    if (settings.useSubPanel) {\n                        trAdtTarget = document.getElementById(settings.idPrefix + '_SubRow_' + uniqueIndex, tbWhole);\n                    }\n                    // Remove current row\n                    tbBody.removeChild(trTarget);\n                    if (settings.useSubPanel) {\n                        tbBody.removeChild(trAdtTarget);\n                    }\n                    // Insert before the above row\n                    tbBody.insertBefore(trTarget, trSwap);\n                    if (settings.useSubPanel) {\n                        tbBody.insertBefore(trAdtTarget, trSwap);\n                    }\n                    // Update rowOrder\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex - 1];\n                    settings._rowOrder[oldIndex - 1] = uniqueIndex;\n                    // Update row label\n                    swapSeq = $('td.first', trSwap).html();\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\n                    $('td.first', trTarget).html(swapSeq)\n                    // Save setting\n                    saveSetting(tbWhole, settings);\n                    // Change focus\n                    $('td.last button.moveUp', trTarget).removeClass('ui-state-hover').blur();\n                    $('td.last button.moveUp', trSwap).focus();\n                    // Trigger event\n                    if (settings.afterRowSwapped) {\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex - 1);\n                    }\n                }\n            }\n            return target;\n        },\n        moveDownRow: function (rowIndex, uniqueIndex) {\n            var settings = checkGridAndGetSettings(this), target = this;\n            if (settings) {\n                var tbWhole = target[0], trTarget, trSwap, trAdtSwap, swapSeq, oldIndex = null;\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\n                if ($.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length - 1) {\n                    oldIndex = rowIndex;\n                    uniqueIndex = settings._rowOrder[rowIndex];\n                } else if ($.isNumeric(uniqueIndex)) {\n                    oldIndex = findRowIndex(uniqueIndex, settings);\n                }\n                if (oldIndex != null && oldIndex != settings._rowOrder.length - 1) {\n                    // Get row to swap\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex + 1], tbWhole);\n                    // Get the sub panel row if used\n                    if (settings.useSubPanel) {\n                        trAdtSwap = document.getElementById(settings.idPrefix + '_SubRow_' + settings._rowOrder[oldIndex + 1], tbWhole);\n                    }\n                    // Remove current row\n                    tbBody.removeChild(trSwap);\n                    // Insert before the above row\n                    tbBody.insertBefore(trSwap, trTarget);\n                    if (settings.useSubPanel) {\n                        tbBody.insertBefore(trAdtSwap, trTarget);\n                    }\n                    // Update rowOrder\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex + 1];\n                    settings._rowOrder[oldIndex + 1] = uniqueIndex;\n                    // Update row label\n                    swapSeq = $('td.first', trSwap).html();\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\n                    $('td.first', trTarget).html(swapSeq)\n                    // Save setting\n                    saveSetting(tbWhole, settings);\n                    // Change focus\n                    $('td.last button.moveDown', trTarget).removeClass('ui-state-hover').blur();\n                    $('td.last button.moveDown', trSwap).focus();\n                    // Trigger event\n                    if (settings.afterRowSwapped) {\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex + 1);\n                    }\n                }\n            }\n            return target;\n        },\n        showColumn: function (name) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && name) {\n                // Find column index\n                var colIndex = -1, tbWhole = this[0];\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name == name) {\n                        colIndex = z;\n                        break;\n                    }\n                }\n                // Make sure the column exist and show the column if it is invisible only\n                if (colIndex != -1 && settings.columns[colIndex].invisible) {\n                    // Change caption and footer column span\n                    settings._visibleCount++;\n                    settings._finalColSpan++;\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\n                    // Remove invisible class on each row\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').removeClass('invisible');\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\n                        var uniqueIndex = settings._rowOrder[z];\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).removeClass('invisible');\n                        if (settings.useSubPanel) {\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\n                        }\n                    }\n                    // Save changes\n                    settings.columns[colIndex].invisible = false;\n                    saveSetting(tbWhole, settings);\n                }\n            }\n            return this;\n        },\n        hideColumn: function (name) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && name) {\n                // Find column index\n                var colIndex = -1, tbWhole = this[0];\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name == name) {\n                        colIndex = z;\n                        break;\n                    }\n                }\n                // Make sure the column exist and hide the column if it is visible only\n                if (colIndex != -1 && !settings.columns[colIndex].invisible) {\n                    // Change caption and footer column span\n                    settings._visibleCount--;\n                    settings._finalColSpan--;\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\n                    // Add invisible class on each row\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').addClass('invisible');\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\n                        var uniqueIndex = settings._rowOrder[z];\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).addClass('invisible');\n                        if (settings.useSubPanel) {\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\n                        }\n                    }\n                    // Save changes\n                    settings.columns[colIndex].invisible = true;\n                    saveSetting(tbWhole, settings);\n                }\n            }\n            return this;\n        },\n        isColumnInvisible: function (name) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && name) {\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name == name) {\n                        return settings.columns[z].invisible;\n                    }\n                }\n            }\n            return null;\n        },\n        getRowCount: function () {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                return settings._rowOrder.length;\n            }\n            return null;\n        },\n        getUniqueIndex: function (rowIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && $.isNumeric(rowIndex) && rowIndex < settings._rowOrder.length) {\n                return settings._rowOrder[rowIndex];\n            }\n            return null;\n        },\n        getRowIndex: function (uniqueIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && $.isNumeric(uniqueIndex)) {\n                for (var z = 0; z < settings._rowOrder.length; z++) {\n                    if (settings._rowOrder[z] == uniqueIndex) {\n                        return z;\n                    }\n                }\n            }\n            return null;\n        },\n        getRowValue: function (rowIndex, uniqueIndex, loopIndex) {\n            var settings = checkGridAndGetSettings(this), result = null;\n            if (settings) {\n                if ($.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\n                    uniqueIndex = settings._rowOrder[rowIndex];\n                }\n                if (!isEmpty(uniqueIndex)) {\n                    result = getRowValue(settings, uniqueIndex, loopIndex);\n                }\n            }\n            return result;\n        },\n        getAllValue: function (objectMode) {\n            var settings = checkGridAndGetSettings(this), result = null;\n            if (settings) {\n                // Prepare result based on objectMode setting\n                result = objectMode ? {} : [];\n                // Process on each rows\n                for (var z = 0; z < settings._rowOrder.length; z++) {\n                    if (objectMode) {\n                        rowValue = getRowValue(settings, settings._rowOrder[z], z);\n                        $.extend(result, rowValue)\n                    } else {\n                        rowValue = getRowValue(settings, settings._rowOrder[z]);\n                        result.push(rowValue);\n                    }\n                }\n                if (objectMode) {\n                    result[settings.rowCountName] = settings._rowOrder.length;\n                }\n            }\n            return result;\n        },\n        getCtrlValue: function (name, rowIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name === name) {\n                        return getCtrlValue(settings, z, settings._rowOrder[rowIndex]);\n                    }\n                }\n            }\n            return null;\n        },\n        setCtrlValue: function (name, rowIndex, value) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name == name) {\n                        setCtrlValue(settings, z, settings._rowOrder[rowIndex], value);\n                        break;\n                    }\n                }\n            }\n            return this;\n        },\n        getCellCtrl: function (name, rowIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\n                var uniqueIndex = settings._rowOrder[rowIndex];\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name === name) {\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\n                    }\n                }\n            }\n            return null;\n        },\n        getCellCtrlByUniqueIndex: function (name, uniqueIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                for (var z = 0; z < settings.columns.length; z++) {\n                    if (settings.columns[z].name === name) {\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\n                    }\n                }\n            }\n            return null;\n        },\n        getRowOrder: function () {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                // Return a copy of `Row Order` array\n                return settings._rowOrder.slice();\n            }\n            return null;\n        },\n        getColumns: function () {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                // Return a copy of the columns array\n                return settings.columns.slice();\n            }\n            return null;\n        },\n        isRowEmpty: function (rowIndex) {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                return isRowEmpty(settings, rowIndex);\n            }\n            return null;\n        },\n        removeEmptyRows: function () {\n            var settings = checkGridAndGetSettings(this);\n            if (settings) {\n                var tbWhole = this[0];\n                for (var z = settings._rowOrder.length; z >= 0; z--) {\n                    if (isRowEmpty(settings, z)) {\n                        // Remove itself\n                        removeRow(tbWhole, null, settings._rowOrder[z], true);\n                    }\n                }\n                return this;\n            }\n            return null;\n        }\n    };\n    function checkGridAndGetSettings(grid, noMsg) {\n        // Check the jQuery grid object is initialized and return its settings\n        var settings = null;\n        if (grid.length == 1) {\n            settings = grid.data('appendGrid');\n            if (!settings && !noMsg) {\n                alert(_systemMessages.notInit);\n            }\n        } else if (!noMsg) {\n            alert(_systemMessages.getValueMultiGrid);\n        }\n        return settings;\n    }\n    function insertRow(tbWhole, numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\n        // Define variables\n        var settings = $(tbWhole).data('appendGrid');\n        var addedRows = [], parentIndex = null, uniqueIndex, ctrl, hidden = [];\n        var tbHead = tbWhole.getElementsByTagName('thead')[0];\n        var tbBody = tbWhole.getElementsByTagName('tbody')[0];\n        var tbRow, tbSubRow = null, tbCell, reachMaxRow = false, calColWidth = false;\n        var oldHeight = 0, oldScroll = 0;\n        if (settings.maxBodyHeight > 0) {\n            tbHead = $('#' + settings._wrapperId + ' table thead')[0];\n        }\n        // Check number of row to be inserted\n        var numOfRow = numOfRowOrRowArray, loadData = false;\n        if ($.isArray(numOfRowOrRowArray)) {\n            numOfRow = numOfRowOrRowArray.length;\n            loadData = true;\n        }\n        // Check parent row\n        if ($.isNumeric(callerUniqueIndex)) {\n            for (var z = 0; z < settings._rowOrder.length; z++) {\n                if (settings._rowOrder[z] == callerUniqueIndex) {\n                    rowIndex = z;\n                    if (z != 0) parentIndex = z - 1;\n                    break;\n                }\n            }\n        }\n        else if ($.isNumeric(rowIndex)) {\n            if (rowIndex >= settings._rowOrder.length) {\n                rowIndex = null;\n            } else {\n                parentIndex = rowIndex - 1;\n            }\n        }\n        else if (settings._rowOrder.length != 0) {\n            rowIndex = null;\n            parentIndex = settings._rowOrder.length - 1;\n        }\n        // Store old grid height\n        if (settings.maintainScroll && !$.isNumeric(rowIndex)) {\n            oldHeight = $(tbWhole).height();\n            oldScroll = $(tbWhole).scrollParent().scrollTop();\n        }\n        // Remove empty row\n        if (settings._rowOrder.length == 0) {\n            $('tr.empty', tbWhole).remove();\n            calColWidth = true;\n        }\n        // Add total number of row\n        for (var z = 0; z < numOfRow; z++) {\n            // Check maximum number of rows\n            if (0 < settings.maxRowsAllowed && settings._rowOrder.length >= settings.maxRowsAllowed) {\n                reachMaxRow = true;\n                break;\n            }\n            // Update variables\n            settings._uniqueIndex++;\n            uniqueIndex = settings._uniqueIndex;\n            hidden.length = 0;\n            // Check row insert index\n            if ($.isNumeric(rowIndex)) {\n                settings._rowOrder.splice(rowIndex, 0, uniqueIndex);\n                if (settings.useSubPanel) {\n                    tbBody.insertBefore(tbSubRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\n                    tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\n                } else {\n                    tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex]);\n                }\n                addedRows.push(rowIndex);\n            }\n            else {\n                settings._rowOrder.push(uniqueIndex);\n                tbBody.appendChild(tbRow = document.createElement('tr'));\n                if (settings.useSubPanel) {\n                    tbBody.appendChild(tbSubRow = document.createElement('tr'));\n                }\n                addedRows.push(settings._rowOrder.length - 1);\n            }\n            tbRow.id = settings.idPrefix + '_Row_' + uniqueIndex;\n            if (settings._sectionClasses.body) {\n                tbRow.className = settings._sectionClasses.body;\n            }\n            $(tbRow).data('appendGrid', uniqueIndex);\n            // Config on the sub panel row\n            if (tbSubRow != null) {\n                tbSubRow.id = settings.idPrefix + '_SubRow_' + uniqueIndex;\n                $(tbSubRow).data('appendGrid', uniqueIndex);\n                if (settings._sectionClasses.subPanel) {\n                    tbSubRow.className = settings._sectionClasses.subPanel;\n                }\n            }\n            // Add row number\n            if (!settings.hideRowNumColumn) {\n                tbRow.appendChild(tbCell = document.createElement('td'));\n                $(tbCell).addClass('ui-widget-content first').text(settings._rowOrder.length);\n                if (settings.useSubPanel) tbCell.rowSpan = 2;\n            }\n            // Process on each columns\n            for (var y = 0; y < settings.columns.length; y++) {\n                // Skip hidden\n                if (settings.columns[y].type == 'hidden') {\n                    hidden.push(y);\n                    continue;\n                }\n                // Check column invisble\n                var className = 'ui-widget-content';\n                if (settings.columns[y].invisible) className += ' invisible';\n                // Insert cell\n                tbRow.appendChild(tbCell = document.createElement('td'));\n                tbCell.id = settings.idPrefix + '_' + settings.columns[y].name + '_td_' + uniqueIndex;\n                tbCell.className = className;\n                if (settings.columns[y].cellCss != null) $(tbCell).css(settings.columns[y].cellCss);\n                // Prepare control id and name\n                var ctrlId = settings.idPrefix + '_' + settings.columns[y].name + '_' + uniqueIndex, ctrlName;\n                if ($.isFunction(settings.nameFormatter)) {\n                    ctrlName = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\n                } else {\n                    ctrlName = settings.idPrefix + '['+ uniqueIndex +'][' + settings.columns[y].name + ']';\n                }\n                // Check control type\n                ctrl = null;\n                if (settings.columns[y].type == 'custom') {\n                    if ($.isFunction(settings.columns[y].customBuilder)) {\n                        ctrl = settings.columns[y].customBuilder(tbCell, settings.idPrefix, settings.columns[y].name, uniqueIndex);\n                    }\n                } else if (settings.columns[y].type == 'select' || settings.columns[y].type == 'ui-selectmenu') {\n                    ctrl = document.createElement('select');\n                    ctrl.id = ctrlId;\n                    ctrl.name = ctrlName;\n                    // Build option list\n                    if ($.isArray(settings.columns[y].ctrlOptions)) {\n                        // For array type option list\n                        if (settings.columns[y].ctrlOptions.length > 0) {\n                            if ($.isPlainObject(settings.columns[y].ctrlOptions[0])) {\n                                // Check to generate optGroup or not\n                                var lastGroupName = null, lastGroupElem = null;\n                                for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\n                                    if (!isEmpty(settings.columns[y].ctrlOptions[x].group)) {\n                                        if (lastGroupName != settings.columns[y].ctrlOptions[x].group) {\n                                            lastGroupName = settings.columns[y].ctrlOptions[x].group;\n                                            lastGroupElem = document.createElement('optgroup');\n                                            lastGroupElem.label = lastGroupName;\n                                            ctrl.appendChild(lastGroupElem);\n                                        }\n                                    } else {\n                                        lastGroupElem = null;\n                                    }\n                                    var option = $('<option/>').val(settings.columns[y].ctrlOptions[x].value).text(settings.columns[y].ctrlOptions[x].label);\n                                    if (!isEmpty(settings.columns[y].ctrlOptions[x].title)) {\n                                        option.attr('title', settings.columns[y].ctrlOptions[x].title);\n                                    }\n                                    if (null == lastGroupElem) {\n                                        option.appendTo(ctrl);\n                                    }\n                                    else {\n                                        option.appendTo(lastGroupElem);\n                                    }\n                                    // ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x].label, settings.columns[y].ctrlOptions[x].value);\n                                }\n                            }\n                            else {\n                                for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\n                                    ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], settings.columns[y].ctrlOptions[x]);\n                                }\n                            }\n                        }\n                    } else if ($.isPlainObject(settings.columns[y].ctrlOptions)) {\n                        // For plain object type option list\n                        for (var x in settings.columns[y].ctrlOptions) {\n                            ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], x);\n                        }\n                    } else if (typeof (settings.columns[y].ctrlOptions) == 'string') {\n                        // For string type option list\n                        var arrayOpt = settings.columns[y].ctrlOptions.split(';');\n                        for (var x = 0; x < arrayOpt.length; x++) {\n                            var eqIndex = arrayOpt[x].indexOf(':');\n                            if (-1 == eqIndex) {\n                                ctrl.options[ctrl.options.length] = new Option(arrayOpt[x], arrayOpt[x]);\n                            } else {\n                                ctrl.options[ctrl.options.length] = new Option(arrayOpt[x].substring(eqIndex + 1, arrayOpt[x].length), arrayOpt[x].substring(0, eqIndex));\n                            }\n                        }\n                    } else if ($.isFunction(settings.columns[y].ctrlOptions)) {\n                        settings.columns[y].ctrlOptions(ctrl);\n                    }\n                    tbCell.appendChild(ctrl);\n                    // Handle UI widget\n                    if (settings.columns[y].type == 'ui-selectmenu') {\n                        $(ctrl).selectmenu(settings.columns[y].uiOption);\n                    }\n                }\n                else if (settings.columns[y].type == 'checkbox') {\n                    ctrl = document.createElement('input');\n                    ctrl.type = 'checkbox';\n                    ctrl.id = ctrlId;\n                    ctrl.name = ctrlName;\n                    ctrl.value = 1;\n                    tbCell.appendChild(ctrl);\n                    tbCell.style.textAlign = 'center';\n                }\n                else if (settings.columns[y].type == 'textarea') {\n                    ctrl = document.createElement('textarea');\n                    ctrl.id = ctrlId;\n                    ctrl.name = ctrlName;\n                    tbCell.appendChild(ctrl);\n                }\n                else if (-1 != settings.columns[y].type.search(/^(color|date|datetime|datetime\\-local|email|month|number|range|search|tel|time|url|week)$/)) {\n                    ctrl = document.createElement('input');\n                    try {\n                        ctrl.type = settings.columns[y].type;\n                    }\n                    catch (err) { /* Not supported type */ }\n                    ctrl.id = ctrlId;\n                    ctrl.name = ctrlName;\n                    tbCell.appendChild(ctrl);\n                }\n                else {\n                    // Generate text input\n                    ctrl = document.createElement('input');\n                    ctrl.type = 'text';\n                    ctrl.id = ctrlId;\n                    ctrl.name = ctrlName;\n                    tbCell.appendChild(ctrl);\n                    // Handle UI widget\n                    if (settings.columns[y].type == 'ui-datepicker') {\n                        $(ctrl).datepicker(settings.columns[y].uiOption);\n                    } else if (settings.columns[y].type == 'ui-spinner') {\n                        $(ctrl).spinner(settings.columns[y].uiOption);\n                    } else if (settings.columns[y].type == 'ui-autocomplete') {\n                        $(ctrl).autocomplete(settings.columns[y].uiOption);\n                    }\n                }\n                // Add extra control properties\n                if (settings.columns[y].type != 'custom') {\n                    // Add control attributes as needed\n                    if (settings.columns[y].ctrlAttr != null) $(ctrl).attr(settings.columns[y].ctrlAttr);\n                    // Add control properties as needed\n                    if (settings.columns[y].ctrlProp != null) $(ctrl).prop(settings.columns[y].ctrlProp);\n                    // Add control CSS as needed\n                    if (settings.columns[y].ctrlCss != null) $(ctrl).css(settings.columns[y].ctrlCss);\n                    // Add control class as needed\n                    if (settings.columns[y].ctrlClass != null) $(ctrl).addClass(settings.columns[y].ctrlClass);\n                    // Add jQuery UI tooltip as needed\n                    if (settings.columns[y].uiTooltip) $(ctrl).tooltip(settings.columns[y].uiTooltip);\n                    // Add control events as needed\n                    if ($.isFunction(settings.columns[y].onClick)) {\n                        $(ctrl).click({ caller: tbWhole, callback: settings.columns[y].onClick, uniqueIndex: uniqueIndex }, function (evt) {\n                            evt.data.callback(evt, $(evt.data.caller).appendGrid('getRowIndex', evt.data.uniqueIndex));\n                        });\n                    }\n                    if ($.isFunction(settings.columns[y].onChange)) {\n                        $(ctrl).change({ caller: tbWhole, callback: settings.columns[y].onChange, uniqueIndex: uniqueIndex }, function (evt) {\n                            evt.data.callback(evt, $(evt.data.caller).appendGrid('getRowIndex', evt.data.uniqueIndex));\n                        });\n                    }\n                }\n                if (loadData) {\n                    // Load data if needed\n                    setCtrlValue(settings, y, uniqueIndex, numOfRowOrRowArray[z][settings.columns[y].name]);\n                } else if (!isEmpty(settings.columns[y].value)) {\n                    // Set default value\n                    setCtrlValue(settings, y, uniqueIndex, settings.columns[y].value);\n                }\n            }\n            // Add button cell if needed\n            if (!settings._hideLastColumn || settings.columns.length > settings._visibleCount) {\n                if (!settings.rowButtonsInFront) {\n                    tbRow.appendChild(tbCell = document.createElement('td'));\n                } else if (!settings.hideRowNumColumn) {\n                    tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.childNodes[1]);\n                } else {\n                    tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.firstChild);\n                }\n                tbCell.className = 'ui-widget-content last';\n                tbCell.id = settings.idPrefix + '_last_td_' + uniqueIndex;\n                if (settings._hideLastColumn) tbCell.style.display = 'none';\n                // Add standard buttons\n                if (!settings.hideButtons.insert) {\n                    var button = createGridButton(settings.customGridButtons.insert, 'ui-icon-arrowreturnthick-1-w')\n\t\t\t\t\t\t.attr({ id: settings.idPrefix + '_Insert_' + uniqueIndex, title: settings._i18n.insert, tabindex: -1 })\n\t\t\t\t\t\t.addClass('insert').data('appendGrid', { uniqueIndex: uniqueIndex })\n\t\t\t\t\t\t.click(function (evt) {\n\t\t\t\t\t\t    var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\n\t\t\t\t\t\t    $(tbWhole).appendGrid('insertRow', 1, null, rowUniqueIndex);\n\t\t\t\t\t\t    if (evt && evt.preventDefault) evt.preventDefault(settings._buttonClasses.insert);\n\t\t\t\t\t\t    return false;\n\t\t\t\t\t\t}).appendTo(tbCell);\n                    if (!isEmpty(settings._buttonClasses.insert)) button.addClass(settings._buttonClasses.insert);\n                }\n                if (!settings.hideButtons.remove) {\n                    var button = createGridButton(settings.customGridButtons.remove, 'ui-icon-trash')\n\t\t\t\t\t\t.attr({ id: settings.idPrefix + '_Delete_' + uniqueIndex, title: settings._i18n.remove, tabindex: -1 })\n\t\t\t\t\t\t.addClass('remove btn btn-sm btn-default').data('appendGrid', { uniqueIndex: uniqueIndex })\n                        .click(function (evt) {\n                            var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\n                            removeRow(tbWhole, null, rowUniqueIndex, false);\n                            if (evt && evt.preventDefault) evt.preventDefault();\n                            return false;\n                        }).text('remove').appendTo(tbCell);\n                    if (!isEmpty(settings._buttonClasses.remove)) button.addClass(settings._buttonClasses.remove);\n                }\n                if (!settings.hideButtons.moveUp) {\n                    var button = createGridButton(settings.customGridButtons.moveUp, 'ui-icon-arrowthick-1-n')\n\t\t\t\t\t\t.attr({ id: settings.idPrefix + '_MoveUp_' + uniqueIndex, title: settings._i18n.moveUp, tabindex: -1 })\n\t\t\t\t\t\t.addClass('moveUp').data('appendGrid', { uniqueIndex: uniqueIndex })\n\t\t\t\t\t\t.click(function (evt) {\n\t\t\t\t\t\t    var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\n\t\t\t\t\t\t    $(tbWhole).appendGrid('moveUpRow', null, rowUniqueIndex);\n\t\t\t\t\t\t    if (evt && evt.preventDefault) evt.preventDefault();\n\t\t\t\t\t\t    return false;\n\t\t\t\t\t\t}).appendTo(tbCell);\n                    if (!isEmpty(settings._buttonClasses.moveUp)) button.addClass(settings._buttonClasses.moveUp);\n                }\n                if (!settings.hideButtons.moveDown) {\n                    var button = createGridButton(settings.customGridButtons.moveDown, 'ui-icon-arrowthick-1-s')\n\t\t\t\t\t\t.attr({ id: settings.idPrefix + '_MoveDown_' + uniqueIndex, title: settings._i18n.moveDown, tabindex: -1 })\n\t\t\t\t\t\t.addClass('moveDown').data('appendGrid', { uniqueIndex: uniqueIndex })\n\t\t\t\t\t\t.click(function (evt) {\n\t\t\t\t\t\t    var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\n\t\t\t\t\t\t    $(tbWhole).appendGrid('moveDownRow', null, rowUniqueIndex);\n\t\t\t\t\t\t    if (evt && evt.preventDefault) evt.preventDefault();\n\t\t\t\t\t\t    return false;\n\t\t\t\t\t\t}).appendTo(tbCell);\n                    if (!isEmpty(settings._buttonClasses.moveDown)) button.addClass(settings._buttonClasses.moveDown);\n                }\n                // Handle row dragging\n                if (settings.rowDragging) {\n                    var button = $('<span/>').addClass('rowDrag btn btn-default btn-sm')\n                        .attr('title', settings._i18n.rowDrag).text('Drag').appendTo(tbCell);\n                    if (!isEmpty(settings._buttonClasses.rowDrag)) button.addClass(settings._buttonClasses.rowDrag);\n                }\n                // Add hidden\n                for (var y = 0; y < hidden.length; y++) {\n                    ctrl = document.createElement('input');\n                    ctrl.id = settings.idPrefix + '_' + settings.columns[hidden[y]].name + '_' + uniqueIndex;\n                    if ($.isFunction(settings.nameFormatter)) {\n                        ctrl.name = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\n                    } else {\n                        ctrl.name = ctrl.id;\n                    }\n                    ctrl.type = 'hidden';\n\n                    if (loadData) {\n                        // Load data if needed\n                        ctrl.value = numOfRowOrRowArray[z][settings.columns[hidden[y]].name];\n                    } else if (!isEmpty(settings.columns[hidden[y]].value)) {\n                        // Set default value\n                        ctrl.value = settings.columns[hidden[y]].value;\n                    }\n                    tbCell.appendChild(ctrl);\n                }\n                // Add extra buttons\n                if (settings.customRowButtons && settings.customRowButtons.length) {\n                    // Add front buttons\n                    for (var y = settings.customRowButtons.length - 1; y >= 0; y--) {\n                        var buttonCfg = settings.customRowButtons[y];\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\n                            $(tbCell).prepend(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\n                        }\n                    }\n                    // Add end buttons\n                    for (var y = 0; y < settings.customRowButtons.length; y++) {\n                        var buttonCfg = settings.customRowButtons[y];\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\n                            $(tbCell).append(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\n                        }\n                    }\n                }\n            }\n            // Create sub panel\n            if (settings.useSubPanel) {\n                tbSubRow.appendChild(tbCell = document.createElement('td'));\n                tbCell.className = 'ui-widget-content';\n                tbCell.colSpan = settings._visibleCount + (settings._hideLastColumn ? 0 : 1);\n                if ($.isFunction(settings.subPanelBuilder)) {\n                    settings.subPanelBuilder(tbCell, uniqueIndex);\n                }\n            }\n        }\n        // Check if re-calculate column width is required\n        if (0 < settings.maxBodyHeight && settings._calculateWidth && !calColWidth) {\n            var scroll = $('#' + settings._wrapperId + '>div.scroller')[0];\n            if (scroll.scrollHeight > scroll.offsetHeight) {\n                calColWidth = true;\n                settings._calculateWidth = false;\n            }\n        }\n        // Save setting\n        saveSetting(tbWhole, settings);\n        // Calculate column width\n        if (calColWidth && settings.autoColumnWidth && settings.maxBodyHeight > 0) {\n            calculateColumnWidth(document.getElementById(settings._wrapperId));\n        }\n        // Trigger events\n        if ($.isNumeric(rowIndex)) {\n            if ($.isFunction(settings.afterRowInserted)) {\n                settings.afterRowInserted(tbWhole, parentIndex, addedRows);\n            }\n        }\n        else {\n            if ($.isFunction(settings.afterRowAppended)) {\n                settings.afterRowAppended(tbWhole, parentIndex, addedRows);\n            }\n        }\n        if (reachMaxRow && $.isFunction(settings.maxNumRowsReached)) {\n            settings.maxNumRowsReached();\n        }\n        // Scroll the page when append row\n        if (settings.maintainScroll && !$.isNumeric(rowIndex)) {\n            // Try to maintain the height so that user no need to scroll every time when row added\n            var newHeight = $(tbWhole).height();\n            $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\n        }\n        // Return added rows' uniqueIndex\n        return { addedRows: addedRows, parentIndex: parentIndex, rowIndex: rowIndex };\n    }\n    function makeCustomBottomButton(tbWhole, buttonCfg) {\n        var exButton = $('<button/>').attr({ type: 'button', tabindex: -1 })\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole }, buttonCfg.click);\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\n        return exButton;\n    }\n    function makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex) {\n        var exButton = $('<button/>').val(uniqueIndex).attr({ type: 'button', tabindex: -1 })\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole, uniqueIndex: uniqueIndex }, function (evt) {\n            var rowData = $(evt.data.tbWhole).appendGrid('getRowValue', null, evt.data.uniqueIndex);\n            buttonCfg.click(evt, evt.data.uniqueIndex, rowData);\n        });\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\n        return exButton;\n    }\n    function removeRow(tbWhole, rowIndex, uniqueIndex, force) {\n        var settings = $(tbWhole).data('appendGrid');\n        var tbBody = tbWhole.getElementsByTagName('tbody')[0];\n        if ($.isNumeric(uniqueIndex)) {\n            for (var z = 0; z < settings._rowOrder.length; z++) {\n                if (settings._rowOrder[z] == uniqueIndex) {\n                    rowIndex = z;\n                    break;\n                }\n            }\n        }\n        if ($.isNumeric(rowIndex)) {\n            // Remove middle row\n            if (force || typeof (settings.beforeRowRemove) != 'function' || settings.beforeRowRemove(tbWhole, rowIndex)) {\n                settings._rowOrder.splice(rowIndex, 1);\n                if (settings.useSubPanel) {\n                    tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\n                    tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\n                } else {\n                    tbBody.removeChild(tbBody.childNodes[rowIndex]);\n                }\n                // Save setting\n                saveSetting(tbWhole, settings);\n                // Sort sequence\n                sortSequence(tbWhole, rowIndex);\n                // Trigger event\n                if ($.isFunction(settings.afterRowRemoved)) {\n                    settings.afterRowRemoved(tbWhole, rowIndex);\n                }\n            }\n        }\n        else {\n            // Store old window scroll value\n            var oldHeight = 0, oldScroll = 0;\n            if (settings.maintainScroll) {\n                oldHeight = $(tbWhole).height();\n                oldScroll = $(tbWhole).scrollParent().scrollTop();\n            }\n            // Remove last row\n            if (force || !$.isFunction(settings.beforeRowRemove) || settings.beforeRowRemove(tbWhole, settings._rowOrder.length - 1)) {\n                uniqueIndex = settings._rowOrder.pop();\n                tbBody.removeChild(tbBody.lastChild);\n                if (settings.useSubPanel) {\n                    tbBody.removeChild(tbBody.lastChild);\n                }\n                // Save setting\n                saveSetting(tbWhole, settings);\n                // Trigger event\n                if ($.isFunction(settings.afterRowRemoved)) {\n                    settings.afterRowRemoved(tbWhole, null);\n                }\n            }\n            // Scroll the page when append row\n            if (settings.maintainScroll) {\n                // Try to maintain the height so that user no need to scroll every time when row added\n                var newHeight = $(tbWhole).height();\n                $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\n            }\n        }\n        // Add empty row\n        if (settings._rowOrder.length == 0) {\n            showEmptyMessage(document.getElementById(settings._wrapperId), settings);\n        }\n    }\n    function showEmptyMessage(tbWrap, settings, skipWidthCalculation) {\n        var $emptyCell = $('<td></td>').text(settings._i18n.rowEmpty).attr('colspan', settings._finalColSpan);\n        $('table.body tbody', tbWrap).append($('<tr></tr>').addClass('empty').append($emptyCell));\n        if (!skipWidthCalculation && settings.maxBodyHeight > 0) {\n            // Check scrolling enabled\n            if (settings.autoColumnWidth) {\n                calculateColumnWidth(tbWrap);\n            } else {\n                // Set the width of empty message cell to the thead width\n                $emptyCell.width($('table.head', tbWrap).width() - 4);\n            }\n        }\n    }\n    function emptyGrid(tbWhole) {\n        // Load settings\n        var settings = $(tbWhole).data('appendGrid');\n        // Remove rows\n        $('tbody', tbWhole).empty();\n        settings._rowOrder.length = 0;\n        settings._uniqueIndex = 0;\n        // Save setting\n        saveSetting(tbWhole, settings);\n        // Add empty row\n        showEmptyMessage(document.getElementById(settings._wrapperId), settings);\n    }\n    function sortSequence(tbWhole, startIndex) {\n        var settings = $(tbWhole).data('appendGrid');\n        if (!settings.hideRowNumColumn) {\n            for (var z = startIndex; z < settings._rowOrder.length; z++) {\n                $('#' + settings.idPrefix + '_Row_' + settings._rowOrder[z] + ' td.first', tbWhole).text(z + 1);\n            }\n        }\n    }\n    function loadData(tbWhole, records, isInit) {\n        var tbBody, tbRow, tbCell, uniqueIndex, insertResult;\n        var settings = $(tbWhole).data('appendGrid');\n        if (settings) {\n            // Clear existing content\n            tbBody = tbWhole.getElementsByTagName('tbody')[0];\n            $(tbBody).empty();\n            settings._rowOrder.length = 0;\n            settings._uniqueIndex = 0;\n            // Check any records\n            if (records != null && records.length) {\n                // Add rows\n                insertResult = insertRow(tbWhole, records.length, null, null);\n                // Set data\n                for (var r = 0; r < insertResult.addedRows.length; r++) {\n                    for (var c = 0; c < settings.columns.length; c++) {\n                        setCtrlValue(settings, c, settings._rowOrder[r], records[r][settings.columns[c].name]);\n                    }\n                    if ($.isFunction(settings.rowDataLoaded)) {\n                        settings.rowDataLoaded(tbWhole, records[r], r, settings._rowOrder[r]);\n                    }\n                }\n            }\n            // Save setting\n            settings._isDataLoaded = true;\n            if (isInit) settings.initData = null;\n            $(tbWhole).data('appendGrid', settings);\n            // Trigger data loaded event\n            if ($.isFunction(settings.dataLoaded)) {\n                settings.dataLoaded(tbWhole, records);\n            }\n        }\n    }\n    function findRowIndex(uniqueIndex, settings) {\n        for (var z = 0; z < settings._rowOrder.length; z++) {\n            if (settings._rowOrder[z] == uniqueIndex) {\n                return z;\n            }\n        }\n        return null;\n    }\n    function isEmpty(value) {\n        return typeof (value) == 'undefined' || value == null;\n    }\n    function getObjValue(obj, key) {\n        if (!isEmpty(obj) && $.isPlainObject(obj) && !isEmpty(obj[key])) {\n            return obj[key];\n        }\n        return null;\n    }\n    function saveSetting(tbWhole, settings) {\n        $(tbWhole).data('appendGrid', settings);\n        $('#' + settings.idPrefix + '_rowOrder', tbWhole).val(settings._rowOrder.join());\n    }\n    function getRowIndex(settings, uniqueIndex) {\n        var rowIndex = null;\n        for (var z = 0; z < settings._rowOrder.length; z++) {\n            if (settings._rowOrder[z] == uniqueIndex) {\n                return z;\n            }\n        }\n        return rowIndex;\n    }\n    function getRowValue(settings, uniqueIndex, loopIndex) {\n        var result = {}, keyName = null, suffix = (isEmpty(loopIndex) ? '' : '_' + loopIndex);\n        for (var z = 0; z < settings.columns.length; z++) {\n            keyName = settings.columns[z].name + suffix;\n            result[keyName] = getCtrlValue(settings, z, uniqueIndex);\n        }\n        // Merge control values from sub panel if getter method defined\n        if (settings.useSubPanel && $.isFunction(settings.subPanelGetter)) {\n            var adtData = settings.subPanelGetter(uniqueIndex);\n            if ($.isPlainObject(adtData)) {\n                if (suffix == '') {\n                    // Extend to row data directly for array mode\n                    $.extend(result, adtData);\n                } else {\n                    // For returning values in object mode, add suffix to all keys\n                    var newData = {};\n                    for (var key in adtData) {\n                        newData[key + suffix] = adtData[key];\n                    }\n                    $.extend(result, newData);\n                }\n            }\n        }\n        return result;\n    }\n    function getCtrlValue(settings, colIndex, uniqueIndex) {\n        var type = settings.columns[colIndex].type, columnName = settings.columns[colIndex].name;\n        if (type == 'custom') {\n            if ($.isFunction(settings.columns[colIndex].customGetter)) {\n                return settings.columns[colIndex].customGetter(settings.idPrefix, columnName, uniqueIndex);\n            } else {\n                return null;\n            }\n        } else {\n            var ctrl = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\n            if (ctrl == null) {\n                return null;\n            }\n            else if (type == 'checkbox') {\n                return ctrl.checked ? 1 : 0;\n            } else {\n                return $(ctrl).val();\n            }\n        }\n    }\n    function getCellCtrl(type, idPrefix, columnName, uniqueIndex) {\n        return document.getElementById(idPrefix + '_' + columnName + '_' + uniqueIndex);\n    }\n    function setCtrlValue(settings, colIndex, uniqueIndex, data) {\n        var type = settings.columns[colIndex].type;\n        var columnName = settings.columns[colIndex].name;\n        // Handle values by type\n        if (type == 'custom') {\n            if ($.isFunction(settings.columns[colIndex].customSetter)) {\n                settings.columns[colIndex].customSetter(settings.idPrefix, columnName, uniqueIndex, data);\n            } else {\n                // `customSetter` is not a function?? Skip handling...\n            }\n        } else {\n            var element = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\n            if (type == 'checkbox') {\n                element.checked = (data != null && data != 0);\n            } else if (type == 'ui-selectmenu') {\n                element.value = (data == null ? '' : data);\n                $(element).selectmenu('refresh');\n            }\n            else {\n                $(element).val(data == null ? '' : data);\n            }\n        }\n    }\n    function gridRowDragged(tbWhole, isMoveUp, uniqueIndex, tbRowIndex) {\n        // Get setting\n        var settings = $(tbWhole).data('appendGrid');\n        // Find the start sorting index\n        var startIndex = -1;\n        for (var z = 0; z < settings._rowOrder.length; z++) {\n            if (settings._rowOrder[z] == uniqueIndex) {\n                if (isMoveUp) {\n                    startIndex = tbRowIndex;\n                    settings._rowOrder.splice(z, 1);\n                    settings._rowOrder.splice(tbRowIndex, 0, uniqueIndex);\n                } else {\n                    startIndex = z;\n                    settings._rowOrder.splice(tbRowIndex + 1, 0, uniqueIndex);\n                    settings._rowOrder.splice(z, 1);\n                }\n                break;\n            }\n        }\n        // Do re-order\n        sortSequence(tbWhole, startIndex);\n        // Save setting\n        saveSetting(tbWhole, settings);\n\n        // Trigger event\n        if ($.isFunction(settings.afterRowDragged)) {\n            settings.afterRowDragged(tbWhole, tbRowIndex, uniqueIndex);\n        }\n    }\n    function createGridButton(param, uiIcon) {\n        // Generate the standard grid action button based on its parameter.\n        var genButton = null;\n        if (param) {\n            if ($.isFunction(param)) {\n                // Generate button if it is a function.\n                genButton = $(param());\n            } else if (param.nodeType) {\n                // Clone the button if it is a DOM element.\n                genButton = $(param).clone();\n            } else if (param.icon || param.label) {\n                // Generate jQuery UI Button if it is a plain object with `icon` or `label` property.\n                genButton = $('<button/>').attr({ type: 'button' }).button(param);\n            }\n        }\n        if (!genButton) {\n            // Use default setting (jQuery UI Button) if button is not created.\n            genButton = $('<button/>').attr({ type: 'button' }).button({ icon: uiIcon, showLabel: false });\n        }\n        return genButton;\n    }\n    function isRowEmpty(settings, rowIndex) {\n        for (var z = 0; z < settings.columns.length; z++) {\n            var uniqueIndex = settings._rowOrder[rowIndex];\n            var currentValue = getCtrlValue(settings, z, uniqueIndex);\n            // Check the empty criteria is function\n            if ($.isFunction(settings.columns[z].emptyCriteria)) {\n                if (!settings.columns[z].emptyCriteria(currentValue)) {\n                    return false;\n                }\n            } else {\n                // Find the default value\n                var defaultValue = null;\n                if (!isEmpty(settings.columns[z].emptyCriteria)) {\n                    defaultValue = settings.columns[z].emptyCriteria;\n                } else {\n                    // Check default value based on its type\n                    if (settings.columns[z].type == 'checkbox') {\n                        defaultValue = 0;\n                    } else if (settings.columns[z].type == 'select' || settings.columns[z].type == 'ui-selectmenu') {\n                        var options = getCellCtrl(settings.columns[z].type, settings.idPrefix, settings.columns[z].name, uniqueIndex).options;\n                        if (options.length > 0) {\n                            defaultValue = options[0].value;\n                        } else {\n                            defaultValue = '';\n                        }\n                    } else {\n                        defaultValue = '';\n                    }\n                }\n                // Compare with the default value\n                if (currentValue != defaultValue) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    function calculateColumnWidth(tbWrap) {\n        var $tbWhole = $('table.body', tbWrap);\n        var $scroller = $('div.scroller', tbWrap);\n        var settings = $tbWhole.data('appendGrid');\n        var tbHeadRow = $('table.head tr.columnHead', tbWrap)[0];\n        var tbColGp = $('table.body colgroup', tbWrap)[0];\n        // Check any rows within the grid\n        if (settings._rowOrder.length > 0) {\n            // Reset the table/column width\n            $('td', tbHeadRow).width('auto');\n            $('col', tbColGp).width('auto');\n            $tbWhole.width('auto');\n            $scroller.width('auto');\n            // Check the total number of columns\n            var tbBodyRow = $('tbody tr', $tbWhole)[0];\n            var marginThreshold = -2;\n            if ($.fn.modal) {\n                // If bootstrap is loaded, cell margin was reset\n                marginThreshold = 1;\n            }\n            var colLimit = Math.min(tbHeadRow.childNodes.length, tbBodyRow.childNodes.length);\n            for (var z = 0; z < colLimit; z++) {\n                var headCellWidth = tbHeadRow.childNodes[z].clientWidth + 1;\n                var bodyCellWidth = tbBodyRow.childNodes[z].clientWidth + marginThreshold;\n                if (bodyCellWidth > headCellWidth) {\n                    tbHeadRow.childNodes[z].style.width = bodyCellWidth + 'px';\n                } else {\n                    tbColGp.childNodes[z].style.width = headCellWidth + 'px';\n                }\n            }\n        } else {\n            $('table.body,table.foot', tbWrap).width($('table.head').width());\n        }\n        // Set the width of footer row\n        $('table.foot', tbWrap).width($tbWhole.width());\n        // Check the scroll panel width\n        $scroller.width($tbWhole.width() + $scroller[0].offsetWidth - $scroller[0].clientWidth + 1);\n    }\n    /// <summary>\n    /// Initialize append grid or calling its methods.\n    /// </summary>\n    $.fn.appendGrid = function (params) {\n        if (_methods[params]) {\n            return _methods[params].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof (params) === 'object' || !params) {\n            return _methods.init.apply(this, arguments);\n        } else {\n            alert(_systemMessages.notSupportMethod + params);\n        }\n    };\n})(jQuery);\n","/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\n/*!\n * Generated using the Bootstrap Customizer (<none>)\n * Config saved to config.json and <none>\n */\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.7'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d).prop(d, true)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d).prop(d, false)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault()\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus')\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}"],"sourceRoot":""}